#!/usr/local/bin/python
# coding=utf-8

from collections import namedtuple
Runeset = namedtuple("Runeset", "Icon English Gematria Shift")
F = Runeset(Icon = u'ᚠ', English = "F", Gematria = 2, Shift = 0)
U = Runeset(Icon = u'ᚢ', English = "U", Gematria = 3, Shift = 1)
TH = Runeset(Icon = u'ᚦ', English = "TH", Gematria = 5, Shift = 2)
O = Runeset(Icon = u'ᚩ', English = "O", Gematria = 7, Shift = 3)
R = Runeset(Icon = u'ᚱ', English = "R", Gematria = 11, Shift = 4)
CK = Runeset(Icon = u'ᚳ', English = "CK", Gematria = 13, Shift = 5)
G = Runeset(Icon = u'ᚷ', English = "G", Gematria = 17, Shift = 6)
W = Runeset(Icon = u'ᚹ', English = "W", Gematria = 19, Shift = 7)
H = Runeset(Icon = u'ᚻ', English = "H", Gematria = 23, Shift = 8)
N = Runeset(Icon = u'ᚾ', English = "N", Gematria = 29, Shift = 9)
I = Runeset(Icon = u'ᛁ', English = "I", Gematria = 31, Shift = 10)
J = Runeset(Icon = u'ᛂ', English = "J", Gematria = 37, Shift = 11)
EO = Runeset(Icon = u'ᛇ', English = "EO", Gematria = 41, Shift = 12)
P = Runeset(Icon = u'ᛈ', English = "P", Gematria = 43, Shift = 13)#u'ᛈ'
X = Runeset(Icon = u'ᛉ', English = "X", Gematria = 47, Shift = 14)
S = Runeset(Icon = u'ᛋ', English = "S", Gematria = 53, Shift = 15)
T = Runeset(Icon = u'ᛏ', English = "T", Gematria = 59, Shift = 16)
B = Runeset(Icon = u'ᛒ', English = "B", Gematria = 61, Shift = 17)
E = Runeset(Icon = u'ᛖ', English = "E", Gematria = 67, Shift = 18)
M = Runeset(Icon = u'ᛗ', English = "M", Gematria = 71, Shift = 19)
L = Runeset(Icon = u'ᛚ', English = "L", Gematria = 73, Shift = 20)
NG = Runeset(Icon = u'ᛝ', English = "NG", Gematria = 79, Shift = 21)
OE = Runeset(Icon = u'ᛟ', English = "OE", Gematria = 83, Shift = 22)
D = Runeset(Icon = u'ᛞ', English = "D", Gematria = 89, Shift = 23)
A = Runeset(Icon = u'ᚪ', English = "A", Gematria = 97, Shift = 24)
AE = Runeset(Icon = u'ᚫ', English = "AE", Gematria = 101, Shift = 25)
Y = Runeset(Icon = u'ᚣ', English = "Y", Gematria = 103, Shift = 26)
IA = Runeset(Icon = u'ᛡ', English = "IA", Gematria = 107, Shift = 27)
EA = Runeset(Icon = u'ᛠ', English = "EA", Gematria = 109, Shift = 28)
SPACE = Runeset(Icon = u'•', English = " ", Gematria = 0, Shift = 30)

runelist = [F, U, TH, O, R, CK, G, W, H, N, I, J, EO, P, X, S, T, B, E, M, L, NG, OE, D, A, AE, Y, IA, EA]
runefreq = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
customrunelist = []

Page0 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ•ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪ\nᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹ\nᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱ\nᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢ\nᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉ\nᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱ\nᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•\nᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣ\nᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•\nᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻ\nᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣ"
Page1 = ""
Page2 = ""
Page3 = ""
Page4 = ""
Page5 = ""
Page6 = ""
Page7 = ""
Page8 = ""
Page9 = ""
Page10 = ""
Page11 = ""
Page12 = ""
Page13 = ""
Page14 = ""
Page15 = ":ᚠᚢᛚᛗ•ᚪᛠᚣᛟᚪ:ᛚᚢᛝᚾ•ᚳᚢ•ᛒᚾᛏᚠᛝ:ᛁᚢᛁᚢ•ᛟᚫᛂᚠᚫ•ᚢᚷᛉᛇᛈᛉ•ᚣᛠᛚᚪᛉ•ᛟᛉᛡᚦᚻᛠ•ᚾᚪᚳ•ᚢᚷᚾ•ᛈᛖᚾᚦᚩᚢᛁᛡᚱ•ᛏᛁᛒᛇᚳᚠᚷ•ᚩᚦᚪ•ᛁᛈᚻᛡᛒ•ᚹᛈᚻᚱᛞᛉᛏᚢ•ᚣᛒ•ᚠᛋᛉᚢ•ᛗᛁ•ᛡᚱ•ᛝᚢᚠᚦᛝ•ᛈᛟᛒ•ᚻᚷᚻᛡᛚ•ᚩᛞᚪᚳ•ᚦᛈᛞᛋᛡᚻᛇᛚ•ᚢᛏᛋᛞ•ᚦᚢᛞᛝ•ᛚᛉᛝ•ᛏᚩᛚ•ᚪᛚ•ᚣ•ᛟᛡᛉᚣ•ᛒᚻᚫᛂᛡᛁ•ᚱᚦᛚᚠ•ᛠᚾᛝ•ᛉᛗᛒᚩᛠᛈ•"
Page16 = ""
Page17 = ""
Page18 = ""
Page19 = ""
Page20 = ""
Page21 = ""
Page22 = ""
Page23 = ""
Page24 = ""
Page25 = ""
Page26 = ""
Page27 = "ᛗᛈᚣ•ᛚᛋᚩᚪᚫᚻᛚᛖᛇᛁᛗᛚ•ᛚᛋᚳᛈ:ᚾᚻᚷᚢᛡᚻᚢ•ᛒᚠ•ᛞᛂᚢ•ᛒᛖᛁ•ᚫᚠ•ᛈ•ᚫᛈᚦ•ᚱᛗᛚᚳ•ᛒᚷᚣᛗᛠᛒᚫ•ᚾᚦ•ᛗᚠᛡᛠᚳᛒᚷᚫᚠ•ᛖᛂᚱᚩ•ᛈᛒ•ᚠᛒᚩ•ᛇᚱᛠᚱ•ᛠᚷᛖᛚ•ᛇᚱᚾᛋᚩᚩᚳᚪᛖᚣᛖᛖ•ᛏᚱ•ᚢᚣ•ᛟᛂᛉ•ᛠᚷᛝ•ᚣᛏᛝᚾ•ᚪᛏᛋ•ᛝᚪᛂ•ᚠᛚᛋᚢ•ᚹᛠᛈᛁᛏ•ᛁᚾ•ᚱᚱᛝᛗ•ᚣᛗᚠᛁᚫᛁᚪ•ᚢᛟᛒᚹ•ᛗᛁᚻᚣᚹᛞᛚ.ᛟᛏᛞ•ᛟᚳᛒ•ᛡᛒ•ᚪᛏ•ᚹᛏᛈ•ᚹᛠᚩᚱᚩᛖ•ᚣᛚᛋ.ᚢᛡᚱᚠᛂᛇᚱᛡᚦᛖᚢᛏ•ᛝᚫ•ᚾᚪᛠᚩᚪᚾᚪᚦᚷᚩ•ᚫᛉᛒᛏᛖᛠᛗᚷᚱᛗ•ᚣᛝᚠᛒ•ᛞᛟᛞᚪ•ᛠᚱᚳᛁᛈᛞᚠᛗᛝᚻ•ᛋᚩ•ᛞᛈᛉᚾ•ᛟᚱᛡᚾᚳᚳᛏ•ᚾᛈᚠ"
Page28 = "ᛈᚳ•ᛂᚦᛒᛁᚹ•ᛞᚹᛝᛠᛡᚹᛚ•ᚹᛂᚾᚪᛟ•ᛏᛞᛉᚣᛖᚱᛞ•ᚱᛏᛇᛁᚳᛈ•ᛝ•ᚦᛟᚷᛂᚦ•ᚣᛋ•ᛠᚻ•ᚠᛒᛚ•ᛁᚫᛚᛞᛉᚪ•ᛁᚹᚷ•ᛒᚩᚹᚾᛠ•ᛋᛖᛗᛒᛋ•ᚳᚹᚦᛟᚠᚻᚫ•ᛞᚢᛁᛒᛞ•ᛇᛝᛈᚠᛁ•ᛟᚢᚣᛏ•ᚻᚱᛖᚾᚳᛈᛡᛈᛞᛂ•ᛁᛏᛗᛋᚫᛉᚩᚣ•ᚪᛂᛗᛡᛖ•ᛇᛂᚠᛗᚱ.ᛞᛟᚪᛒᛞᚻ•ᚾᛈᚪ•ᛇᚱᚻᚾᛝᛠᚠᚾᚠ•ᚩᛗᛋᚾ•ᛠᚪᛁᚢᛚ•ᚪᚫ•ᛂᛉᛡᚠ•ᛁᛖᛈᛠᚻ•ᚠᛇᚩᚹ•ᛠᛂᛇᛁᛠᚫ•ᛂᛒ•ᛋ•ᚠᛖᚷ•ᛋᛁ•ᛟᛗᛒᛁᛝᛏᚪᚢᛁᚦ•ᚩᛝᛗᚠ•ᚹᛟᛒᛟᛡ•ᚠᚣᛝᚩᛠ•ᚳᛚᛈᚱ•ᛞᛂᚩᛝᛂ•ᚪᛖᛗᛈᚾ•ᚠᛠᚷᛞᛒ•ᚩᛉᚷᚾᚣᚷ•ᛠᛈᛂᛞᚾᛟᚩᚢᚾᚹᛗ.ᛂ•ᚢᚷᛠ•ᛗ•ᛇᚪ.ᚻᚦᛡ•ᛝᛈᛞᛒ•ᚳᛉᚳ•ᛠᛉ•ᛟᚣ•ᛒᚦᛁᛂᛚᛡᛝᛡ•ᚹᛂᚫ•ᛋᛗᚪᛡᛠᛇᛝᛏ•"
Page29 = "ᚦᛞᚷ•ᚢᛏᛚᛏᚣ•ᚢᛝ•ᚷᛟᚪᛏ•ᛂᚦᚣ•ᚫᚻᚪ•ᛒᛝ•ᚦᚢᚱᚪᚾᛞ•ᛁᛝᚫ•ᛚᚫᚷ•ᚹᛁᛒᚣ•ᚾᚫᚠ•ᛚᛋᛒ•ᛈᛟᚪᛟᛞᚷᛟᚣᛉᚷᛚ•ᛋᛠᛁ.ᚳᛟᛁᚦᛈᚹᛉ•ᛖᚢ•ᛟᛂᛝᛋᚢᛝ•ᚳᛡᛠ.ᛚᛇ•ᛚᚷᚢᛁᛏᛒᛋ•ᛞᛁ•ᚠᚠᚷᚠ•ᚦᛂᚳ•ᚫᛟ•ᛁᛗᛡᛁᛇᚦ•ᚩ•ᚢᛈᛒ•ᚻᛋ•ᛂᚣᛂᛖ.ᛒᛇᛇᚱ•ᚹᛂᛏᛡ•ᚳᚪᚫ.ᚩᛈᚱ•ᛡᚾᛗᛁᛝ•ᚻᚹᚦ•ᛡᚦᚻᚦ•ᛉᚫᚫᛋᚳᛡᚾᛇ•ᛟᛉᚢ•ᚱᛂᛖ•ᛚᚾᛞ•ᛗ•ᛏᚱᛟᚦ•ᛁᛝᛡᛒ•ᚳᚩᚹᛟ•ᛏᛗᛋᚱᚷ•ᚱᛚᛞᛚ•ᚩᚣ•ᛞᚳᚪᛖᛞᚠᚳ•ᛇᛖᛉᛚᚫ•ᛖᚩᛁᛋ•ᛡᛁᛟᛋᚪᛒᛗ•ᛗᚣᚹᛂ•ᛖᚫᛝᛚ•ᛂᚱᛇ•ᛈᛚᚩᚻ•ᚪᛞ•ᛡᛂ•ᛞᚠᚹᛞᛂᚳ•ᚾᚦᛉ•ᛂᚻ•ᚷᛚ•ᚠᛖᚦ•ᛇᚻ•ᛝᛖᛒᛚᛞᛁᛗᚠ•ᚹᛒᛗᛟᛁᛖᛁᛠ•ᛈᚻᛝᛖᛞᛟᚩᚻᛂ•ᚹᚩᚾᛂᛈᛗ•ᛖᚳ•ᛖᛇ•ᚷᚻᛗ"
Page30 = "ᛞᚪᛈᛖ•ᛗ•ᛉᚫᛒᛇᚱ•ᛖᚣᛟᚣ•ᚱᛠᛈᚢᛠ•ᚣᛖᚪᚻ•ᚩᛉᛠᚢᚻᛡᛟ•ᚷᚫᚩᛒᛉ•ᚫᚱᛞᛋᚩᚱ•ᚷᛠ•ᛉᚻᛁ•ᚷᚳᛞᛠᛡᚳ•ᛂᛠᛉᛇᚻᛋᚹ•ᛝᛡᚷᛖᛡᚣ•ᛠᚩᚷ•ᚱᚦᚠᛟᚩᚦ•ᚦᛁᛏᚱ•ᛇᛉᛇ•ᚢᚷᛠ•ᛟᛏ•ᚩᚠᛚ•ᛟᛝᛈ•ᚱᛡᚪᚩᛏ•ᚩᛠᚷᚫᛗ•ᛈᛋᚱ•ᛖᚦᚠ•ᛞᚹᚾᛚ•ᛝᚩᛇᛂ•ᚳᛚᚢᚹᛏ•ᚩᛖᛏᚠᚪᛚ•ᛟᛇᛟ•ᛠᚱᛇ•ᚢᚪᚦᛈᛟᛡᛉ.ᛡᛒᚱᛒᚠᚢᛚᚢᛟ•ᛒᛇᛒ•ᛉᚦᚹ•ᛝᚣᛖ•ᚳᚫᚣᛟ•ᚹᛁᛝᚫᛏ•ᚫᛇᛈᛡᛟᚠ•ᛚ•ᛝᚠᛡ.ᛞᚪᛚᛈ•ᛋᛁ•ᚢᚣᚪᛚᛠᛝᚹ•ᚪᛏᛈᚳᚣ•ᛝᚫᚻᛗᛞᚷᛚ.ᛠᛉᛒ•ᛇᛡᛋᛖ•ᚣᛁᛚ•ᚣᛠᚣ•ᚻ.ᚣᛉᚾᛏᚫᛉᛋᚦᚪᚹᛗ•ᚪᚱ•ᚪᚩᚻ.ᛗᛖᚫᛞᛠᛁᛗ•ᛒᛟᚾᚳᚩᚱᛉ•ᛋᚹᚫ•ᚻᛖ•ᛋᚠᚾ•ᚢᚦᛟᚷᛖᚪᛟᛇᛇ•"
Page31 = "ᚦᚳᛒᛝᛏᛉᛡᛞ•ᛋᛡ•ᚩᚠ.ᛈᛖᛞᛋᛁ•ᛚᛁᚻᚾᛝᚱ•ᚻᛈ•ᛇᚢᚫᛞ•ᛚᚻᛉᚳᛈ•ᛁᛗᛉᚳ.ᛂᚫᚾᛞᛋ•ᛏᛚᛡᚩᛋᛗ•ᛚᛞᚾ•ᛈᚫᛏᚷᛈ•ᚫᚦᛂᛗ•ᛒᚻᚩᚻᛁᚷᚻᚳ•ᛚᚹᛋᚱᛇᛗᛏ•ᛂᚳᛁ•ᛠᚦᛞ•ᛏᛚ•ᚱᛖᛠᛒᚪ•ᛒᚠᛒ•ᛁᛒᛡᛇᛏᚣ•ᛏᛖᚣᚳᚱᛋᚠ•ᛁᚦᚪᛉ•ᚪᚣᚫᛠ•ᛂ•ᛈᛗ•ᚠᛋ•ᚪᛒᚱ.ᛉᚣᚻ•ᚦᚩ•ᛇᛞᚢ.ᚠᛁ•ᚻᚩᚫᚠᚣᚷᚱᚪᛂ•ᛏᛉᛇ•ᛖᛠᛞ•ᛏᚠᚢᛝ•ᚫᛂᛖᛈᚳᛒᚦᚢᛝ•ᛡᛒᚹᚱ•ᛖᚾᛈᛇᚣᛇ•ᛉᚱᚹ•ᛒᛡᛞ•ᛖᚱᚩᚻᚣᛠᛈᚦ•ᛗᛁᚷᛚ•ᚹᛉᚫ.ᚠᛞᚾ•ᛂᛟ•ᚻᛚᛡ•ᛗᛖᚷ•ᛟᛁᛡ•ᚻᛟᚱᛇᚹᚣᚠ•ᛈ•ᛂᚷᚦ•ᚪᛒᛝ•ᛈᛒᚪᛖ•ᚢᚹᚻᚩᛒᛋᛉ•ᚹᛞ.ᚦᛇᚱᛖ•ᛂᚾᛞᛝᚹᚪ•ᚻᛖᚹ•ᛟᛡᛂᛡᛟᛝᛂᛉᛚᛂ•ᛞᛉᛟᛈ•ᚱᚪᛁᛏᚷᛉᛝᛇ•ᛠᛗᚩ"
Page32 = "ᛚ•ᚦᚫᚹ•ᚫᚢᛈᛡᚳ•ᚹᛝᚻᚹᛒᛗᛋᛟᛖᛁᛡ•ᛟᚹᚦᚻᛒ•ᛡᚱᛏᚦᚠ•ᚠᚩᚦ.ᚻᚩᛗᛖᛉᚹᛞᛋᛚᚠᛞ•ᛝᛒᛇᛡᛚᚪ•ᚹᛞᚾᚫᛉᛏᚣᛗᚷ•ᚦᚹᛉᛡᚦ•ᚹᛒᛋᚱᛉᛡᛉᚪ•ᚢᛒᚻᛠ•ᚹᛝᚢᚻᛇᛝᛡᛠᛂ•ᛋᛈᚦᛏ•ᛟᛝᚩᛗᛒᚢᛞᛋ•ᛒᛂ•ᛠᚱᛟ•ᛖᚾ•ᚾᚹᚷᚢᛚᚪᚩᚣ•ᚢᛏᚠᛂᛏ•ᚪᚷᛒᛇ:"
Page33 = ""
Page34 = ""
Page35 = ""
Page36 = ""
Page37 = ""
Page38 = ""
Page39 = ""
Page40 = "ᚠᚾᛗ•ᚣᚷᛞᚫᚻ•ᚪᛈᛉᚣᚻ•ᛇᛠᚩᛖ•ᛏᛝᛠ•ᛚᛁᛏᚦᚠ•ᛗᚪᚳᛖ.ᛞᚳ•ᛏᚱᛟᚷᛠᚾᚫᛒᚢᛖᛒᚢ•ᚦᚠᛟ•ᚷᛋᛟ•ᛁᛈ•ᛟᛉᛋᛒ•ᚹᛂᛒᚣᛗᚢᛠ•ᚱᛁᚢᛟᛂᛁ•ᛗᛖᚫ•ᚱᛋᛉᛝ.ᛠᛈᛚ•ᛞᚩᛚᛁᛉᛠᛝᛖᚱ•ᚾᛈᛖᚹᛡ•ᚾᛂᛏᚣ.ᛋᚩᛋᛏᛝ•ᚢᚾᛇᚪ•ᛖᛏᚪᛂᚳᚣ•ᛟᛒ•ᛚᛋ•ᛒᛞᛂ•ᛁᛝᚣᛖᚳ•ᛂᚻᛚᚣ•ᚷᚫᛚᛞ•ᛚᚫᛚᚦᛉ•ᛚ•ᛖᛉᚩᛉᛁᚳᚢᛗᚾᚢ•ᚩᚾᛇ•ᚻᛡᛚᛇᚩᚫᚪ•ᚩᛟᚩ•ᚣᚱ•ᛖᚠᚢ.ᛁᚻ•ᛟᛚᚾᛏ•ᚠᛞᚱᛠᚷ•ᛈᚩᛇᚩᛗᛠᛒ•ᛂᛡ•ᛋᛗᚠ•ᛏᚠᚫᚩ•ᛟᚳᛚᛞᛡᛚ•ᚩᚳᛝᚢ•ᛈᚹᛏ•ᚷᚳᛋ•ᚢᛟᚷᚦ•ᚠᛉᚠᛏ•ᚳᛋᛉᛟ•ᚷᚠᛉᚾᛞ•ᛒᛏᛠᛡ.ᛈᛡ"
Page41 = "ᛠᛁᚪ•ᛋᚣᛗᛞᚣᛋ•ᛒᛞᛂᛞ.ᚩᚾᛏᛚ•ᚳᚪᛝ•ᚱᚷᚻᚷ•ᛂᚹᚠ•ᚪᚢᛇ•ᛞᛏᛗᛂᛁ•ᛝᚫ•ᛉᛈᚳᛈᛠ•ᛟᚪᛒᛁᛁᛋ•ᛇᚷᚻᛋ•ᛇᛡᛒ•ᚠᚹᛝ•ᚫᚪᚠᚩᚣᛡᚪᚾᚻ•ᛒᚦᛟᛇᚣᛟᛁᛒ•ᛟ•ᚩᛋᚹ•ᛞᚳᚠᚪᛁ.ᛉᛏᛟᚢᚩᛟᚦᛈᛋᚩ•ᚻᛇᚦᛝ•ᛏᛠᚠᛝᛠ•ᚩᛗ•ᛏᚠᚣᛚᚣ•ᚹᛚᛞ•ᚪᛉᛠ•ᚪᛂ•ᚩᛋᛒᛚ•ᚳᛖᚾᚪᚩᚱᛏᚦ•ᚱᛒᚳᚣ•ᛠᛗᚹᛚ•ᚻᛈ•ᛇᛈᛖ•ᛚᛂᚩᛡᚪ•ᛖᛋᚫᚩ•ᛠᛉᛝᚣ•ᛖᚫᛒᛗ•ᛖᚻᚱ•ᛈᚾᛗ•ᚹᛏᛟᚣᚢ•ᚠᛉᛈᛗᚩᚷᚾ•ᛡᛇᚳᚠᛒᛈᛗ•ᛋᛇᛁ•ᛖᛈᚢᚱᛏᚳᚣ•ᛂᛚᚠ.ᚱᛚᚱᚫᛖᚻᛟ•ᛇᚣᛡ•ᚩᛉ•ᚪᛋᚣᛁᛝ•ᛉᛚᛂ'ᚳ•ᛖᚣᚢᛝᚦᛇᚱ•ᛠᛁᚫ•ᚦᚠᛟᚷᛠᛁ•ᛈᛋᛒ•ᛗᛒᛂᚠᚾᚳᛖ•ᚻᚫᚩᛂ•ᛉᛂᛚᛈᚪᛁ•ᛟᚹᚱᛁᚱᚦᛖᛉ•ᚪᚾ•ᛞᛂᚷ•ᛟᛟᚳᛏᛂ"
Page42 = "ᛞ•ᛉᚾᛗᚦ•ᛁᛂᚱ•ᛈᛉᚢᚫᚦᛒᚠᛂᚦ•ᚠᚪᛝᛖ•ᚹᚹᚣᛚᛇ•ᚢᚣ•ᚾᚱᚪ•ᛈᚾᚹ•ᛚᚾᛏᛚᚢᛒᚱᛝᚪᛋ•ᚫᛈ•ᛂᛚᚢᚳᚷ•ᛚᛏᛂᚹᛈ•ᚫᛗᛚ•ᛉᛚᛗᛏᛞᚠᛈᛁ.'ᚠᚳᚦᛗᛂᚹᚱᚪᛚ•ᚩᛝᚱᚢᛈᚱᛟᛡ•ᚳᛉᚱ•ᛇᛏᚦᚾ•ᚱᛇᚫᛞᛟᚻ•ᛒᚾᚣ•ᚠᛡᚪᛡᛖᚫᛞᛂᚢᛖ•ᚦᚱ•ᚩᛇᚱᛡ•ᚣᛁᛉᛇᚻᚩᛠ•ᚫᚻᛡᛝᛠᚦ•ᚾᚣ•ᚾᚠᛁᛝ'.'ᛏᚻᚹᚫ•ᛒᛇ•ᛡᚻᛉᛒ•ᛞᛝᚱᛂᚦᚻ•ᚪᚷᚣᛁᚠᚷ•ᛁᛏᛞᛠᛒᚠᚩᛈ•ᛇᛡᛟᚹᚱᚾᚩᛏ•ᛋᚹᚢ.ᛖᛡᛖᛡᚦ•ᛉᚪᚷᛈᚾ•ᛋᚱᚠᛞᛝᚻᛖᛂᛞ•ᛂᛡ•ᚱᚹ•ᚷᛝᚪᛒ•ᛂᛈᛂ•ᛏᚠᛉ•ᚪᛂ•ᛁᚠᛉᚢᚩᚣᚻᚦ•ᚻᚾᛁᛒ•ᛡᛟᛡᛋᛈᚣᛉ•ᛠᚢᛠᛚ•ᚠᛝᛗᚻ•ᚦᛒᚩ•ᛗᛚ•ᚩᛠᛋᚦᛠ•ᛇᛋᛉ•ᚠᛗᛒ•ᚫᛋᛇᚾᛡᚾ•ᚢᚫᚹ•ᛞᛠᚢᚾᛝᚠᚾᛖᚫ"
Page43 = "ᚻᛂ•ᛁᛖᛏᛡ•ᚷᛁᚩᚾ•ᚳᚢᚫᛗᛈᛋᚪᛡ•ᚷᛚᚣᚹᛟ'•ᚠᚢ•ᛉᚠᚫᛞᚠᛡᛂᚾ.ᚻᛋᚦᚠ•ᛏᚠᛂᚱᚹᚠᛋᚾᚹᛂᛖᛒᚢᚦ•ᚩᛇᚫᛈ•ᛡᛟ.ᚢᛁᚩᛂᚩᛇᛟᛂᛞᚩ•ᛈᚹᛞᚷᚱ•ᚠᛟ•ᛇᚷ•ᛂᛟᛇᚫᛋᚫᚣ•ᛒᛏᛞᛟ•ᛠᚻᛡᚱᛠᛠᛉᛋ•ᚠᚾᚣᚱᚠ.ᚪᚾᛡᚪᛖᚫ•ᚳᛇᛁᛝ•ᛒᛡᛞᛠᚫᛒᛠᚳᛉᚠ•ᚫᛏᛁᚱᚪᛗᚩ•ᛚᛉᛋᚪ•ᛒᚩᛈᚫᚩᛝᚻᛇᛖᛇᚫ•ᚻᛖᛇᛠ•ᚱᛗᛞ•ᚫᛇᛗ.ᚾᚾᚣᛡ•ᚱᚾᛗᛠ•ᛂᛉᛋᛂ•ᛟᛖᛒ•ᛏᚻᚾ•ᚠᚪᚠ•ᛒᚾ•ᚩᚾ•ᛖᛋᛏᛒᚹᛡ.ᚻᛏ•ᚩᛟᚩ•ᛒᚾᛖᚳᛁᚹᚣᛟ•ᛟᚩᛒ•ᛋᛖᚩ•ᚫᚻᛟᚠᚫᚷᚩᛂ•ᛟᛒᚻ•ᚳᛖᛁᛚᚫᚣᛚ•ᚢᛚᛁ•ᚾᛟᛏ•ᚫᛈᛟᛈᛝᛗ•ᚳᚢᛁ•ᚣᛋᚳᚢᛡᛇᚩ•ᚠᛖ•ᚷᛟ•ᚻᚫ•ᛝᚠ•ᛗᚠᛝᛉᛞᛁ•ᛗᛝᚣᚪᛝᚠᛉᛁᛟᚷᛚ•ᛇᚩ•ᚫᛡᛏ•ᛂᛏ"
Page44 = "ᛠᚢ•ᚷᚦᚣ•ᚦᚾᛟᚣᚩᛖᚻ•ᛁᛋᛖᚣᚦᚪᛡᛝᛟᛇᛚ•ᛡᛏᛝ•ᛁᛚ•ᚠᛉᛡᛠᛏ•ᚠᚾᛂᚠᚻᚳ•ᚻᛞᛠᚣᛟᛝ•ᛉᛇᚻᚩᛋᚻ.ᛇᛏᚠ•ᛚᚱᛇᚦᚪᛁᛁ•ᛒᚠᛁᛚ•ᛂᛡᛒᚣᛗᚫᚫ•ᛞᚻᛟ•ᚪᚹᛉᛚᛏᛁᚪ•ᛟᛞᛖᚾᛈᚻᚣ•ᚦᛚᛖᛋᛖᛟᚫᛖ•ᛏᚱᚪ•ᛁᚫᚹᚫ•ᛋᛈᚱ•ᛂᛡᚪᛏ•ᚫᚦ•ᚠᛠᚢᛈᚣᚫᛝ•ᚣᚾᚻᛡ•ᚳᛗᚠᚾ•ᛞᛂ•ᛖᚩ•ᛒᚷᚻᚪ•ᛖᛞᛟᚠᛇᛞᛟ•ᛈᚳᛁᚪᛒᚷᛒᛈᛟ•ᛟᛂᚠᚪᛖ•ᛂᚣᚩᛂ•ᚣ•ᚫᛋ•ᚦᛁᚫᛂᚫᛏ•ᛖᛇᚻᛟ•ᚣᚠᚹᛞᚷ.ᛡᚱᛒᚢ•ᛒᛚᚢ•ᚷᛈᛂᚪ•ᛏᛡ•ᚳᛂᚠᛡᛝᛚᚣᛒ•ᛗᚻ•ᚱᛚᛟᛠᛋᚦᛝ•ᛏᚳᛟᛉᛁ•ᛂᚱᚳᛖᛏᛂᚷ•ᛡᛈᛏᛉᚩᛁᛂᛟ•ᚷᚩᚪᚢ•ᚣᛖᚪᛋᛟᛇᚢᚪᛡ•ᛗᚱᛚᚳᚠ•ᛒᛗᛝ•ᚻᛉ•ᛠᛂᚫ•ᛉᚪᚷᚻᚣᛏᛖᛝ•ᛉᛉᛗᚾᚫᛋ•ᚱᛗᛞᛋ"
Page45 = "ᚳ•ᚦᛚᛟ•ᛝᛇᚢ•ᚻᚩ•ᛏ.ᚢᛁᚦᛂᚾᚠᚱᚦ•ᛋᛟᚷᛠᛗᚪ•ᛝᛚᚪᛁᛒᛠᚢᛋ•ᚩ•ᛖᛋᛝ•ᚠᛡᚢᛟᛞᛇᚪ•ᛞᛡᛒᚹᚩ•ᛂᛋ•ᛟᛝᛏᚳ•ᚻᚾᛇᛋ•ᛗᛚᚻᛞᛖᛈ•ᚫᛂᚱᚪᚢᚻᚱᚦᚱ•ᛟᛂ•ᛟᛗᚩᛟᛏ•ᚫᛇ•ᛉᛒᚳ•ᛂᛁ•ᚪᚩᛉ•ᚹᚪᚾᛈᛏᚢᚣ•ᛁᛒᚢ.ᚦᚩᛡ•ᛗᚳᚠᛉᚱᛁ•ᚪᛗᛏᛒ•ᛗᛚᛁᚦᛏᛠᛋᚾᚷᛚ•ᛏ•ᛇᛈ•ᚩᛚᛞ•ᛚᚹᚳᛂᚹᛉ•ᚪᛡᚹᛇ•ᛖᛖᚹ•ᛏᚪ•ᚣᚠᛉᚳ•ᛗᚩᚷᛞᚷ•ᛚᚳ•ᛒᚣᛋᚣᚠᛞᚣᛝ•ᛠᛇᛏᚩᚢᚫ•ᛟᛁᛒ•ᛏᚾᚫᚠ.ᛂᛟᛗᚾᛈ•ᛠᛡᚩᛏᛡᚪᚱᛞ•ᚪᛝᛈᚹᛗᛂᛟᛠᚩ•ᛚᚹᛉ•ᚱᛗ•ᚩᛏᚹᛂᚹᚾ•ᚷᚳᛠ•ᛂᚳᚢᚱ•ᛟᛇᛟᚾᚻᚫᛉ•ᚣᛚᚩ•ᚩᛡᚳᚻᛂ•ᛋᚣᚹᛁ•ᚣᚠᛋᚾᚪ•ᚷᛖᚾᛂᚪᚹᛠ•ᛞᚠᛟ•ᚢᛁ•ᛖᛇᚦ•ᚫᛞ•ᚳᛂ•ᚷᚢᚻᚣᚻᛁᛒᛉᚾ•ᚹᛝ"
Page46 = "ᚻᛏᛉᚫᛁᛂᚢ•ᛞᚠᛡᚫ•ᛋᛁᚹᛝᛈ•ᛗᛉᛂᛈ•ᛞᛗᛝ•ᛇᛚᛞᚣ•ᚠᚩᛞ•ᛝᚷᚾᛇ•ᚷᛖ•ᛚᛉᚣ•ᚫᛚᛖᛉ.ᛡᛝᛋ•ᚳᛁᚦ•ᚷᛏᚣ•ᚹᚩ•ᛝᛖ•ᛒᚪᛗᛏᚪᚷᛒ.ᛈᛡᛟ•ᚪᛉᛝᛒᛞᛉᛂᚦᚢ•ᛏᛇᛖ•ᚣᚪᚳ•ᛠᚦᚹ•ᛏᛉᚩᚳᛞᛒ•ᛟᚩᛠᚾᚠᚪ,ᛚᛗᛖᛁᚦᚫᚪᛡᛂᛁᚪᚱ•ᚦᚱᛖᛖᚣᛋᚾ•ᛖᛏᚢᚻᛈᚳᚦᛋ•ᚳᛇᛉᛖᛇᚠ•ᛞᛠᛏᛈ•ᚣᛇᛠᚢᛏ•ᛉᚦᚷᚻ•ᚫᚾᛠᚱ•ᛡᛒᛏᛁᛉ•ᚩᚢᛝ•ᛚᛒᛇᚩ•ᛟᛉ•ᚦᛞᚷᚠ•ᚩᚱᛈᚪᛏ•ᚫᛋᚪᚦ•ᛖᛟᚪᛝᚫ•ᚣᛒᛚ•ᛡᚦᚾᚠᛈᛟᛡᚾ•ᛖᚹ•ᛖᛗᚩ•ᛉᚹᚦᛠ•ᛁᚦᛒᛖᚱ•ᛟᚳᛉ•ᛈᛖ•ᛁᚢᚦ•ᛈᚠᛞᛈᛂ•ᛁᛟᚻ•ᛒᚦᛏᚩᚳᚢᛚ•ᛞᛂᛝ•ᚦᛂᛁᚪ•ᚹᚣ•ᚢᛝᚾ•ᛋᚾᛈᚠᚫᛒᛂᚫ•ᛡᛗᚹ•ᛇᚪᚩᚾᛂᚳᛚᛒᛉ•ᚣᛠᚦᚹ•ᛝᛚᛗᚳᛡᛇᚠᚫ"
Page47 = "ᛠᛁᚦ•ᛒᛠᛚᚦᚳᛞᛁᛇ•ᚠᚢᛉᛋᛉᛁᚦᚫᛋᛗ•ᚦᚹ.ᛈ•ᛒᛋᛏᚫᚾᚱᛁ•ᚦᛇᛡᚱᛚᛡᚹ•ᚢᚩᛋᚱ•ᚹᚫ•ᛒᚹᛡᛖᛟᛂ•ᛡᚣᛖᚩᛖᛡᚷᚫᚠᚾᚹ•ᛟᛏᚫᚠᛂᚹᛠ.ᚦᛞ•ᛁᚫᚩᚾ•ᛋᚷᛈᚪᛖᚩ•ᚣᚦᚹ•ᚾᚷ.ᛠᛋᚩᛇᛏ•ᛝᛚᚷᛞ•ᛒᛈᛈ•ᛗᛁᚪᛖ•ᛚᛏᛁ•ᚫᛂᛖ•ᛒᚾᚠᚪᛋᚷᛒᚠ•ᚫᚹᚣᚷᚢᛡᚠᛠ•ᛖᛋᛞ•ᛚᚳᛒᛞᛏᛈ•ᛖᚾᛈᚣ•ᚱᚠᚻ•ᚫᛝ•ᛟᚪᛗ•ᛒ•ᛡᛚ•ᛝᛋᚱᚢᚹᚱᚣᚻᚹ•ᚹᛡᛈ•ᛁᚻᚾᚻᚱ•ᚳᛖᛏᚫᚩᛋ•ᚣᛋ.ᛝᚫᛡᛝᚫ•ᚻᚦ•ᛇᚪᛞᛋ•ᛒᛁᚳᛈ•ᛇᛒᛟᚫ•ᛠᛝᛖ•ᛝᛠᚣ•ᛒᚣᛉᚻᚢᚠᚦᛞᚹ•ᛗᚢᛁᛡᛂᚩ•ᛋᛇᚫᛇᛝᚱ•ᛚᛇᛠ•ᛏᚩᛂ•ᚩᛝᛈ•ᚱᚻᛠᚢᛉᚦ•ᚣᚢᛋ•ᛡᛚᛖᚷᛗᛝᚹᚻᚱᛋ•ᚢᛟᚣᛠᚷᚩᚷ•ᛇᛁᛖ•ᛠᛂᛇᛁᚾᛂᚩᛗᚱᛡᛉ•ᚠᚻᚳ•ᚪᚩᚪᚫ"
Page48 = "ᚻᚳᛁᚦ•ᛂᚷ.ᛝᛖᚢ•ᛡᛏᛁ•ᛚᚩᚱᛈ.ᚠᚪ•ᛈᛞᚱᛒ•ᛝᛁᛋ•ᚷ•ᚠᚾᛈᚠᛒ•ᛟᚦᛁᛠᚪ•ᛡᛏᚾᚳ.ᚦᛟᚻᛈᛖᛚᚫ•ᛟᚠᛗ•ᛡᛝ.ᛒᛝᚦᛝᛠᚠ•ᛇᛗᛟ•ᚩᛠᛈ•ᛁᛡᚱ•ᚹᚹᛟᚩᛒᚩ•ᚾᚩᛂᛟᚾ•ᚦᛡᚠ•ᚩᛂᛞᚦᛏᛁ•ᛈᚾᚪᚱᛂ•ᛉᚱᚣ•ᛝᛡ•ᛏᛗ•ᛈᛞᚣᚻ•ᛗᛝᚫᚳᛇ.ᛡᚣᛂᛟ•ᛝᚩᚢᛇᛁᚱ•ᛏᚪ•ᚩᚻᚪᛚᚫᛚᚪ•ᛋᛈ•ᛏᚪᛂᚳᚦᚢᛏᚹᚦ•ᛗᚷᛖᛗᚣᛡᛁᛞ•ᚢᛋᚠᛒ•ᛟᛚᛟ•ᚪᛒ•ᚦᛚᚣ•ᚳᛠᚣ•ᛞᛇᛁ.ᚹᛉ•ᛟᛝᛒᚢᛋᛞᚻᛞ•ᚢ•ᛠᚱ•ᚫᚩᚻᛝᛒᚪᚹ•ᛈᛡᚾᛚᛇ•ᛖᛟᛝ•ᛡᚠᛇᛡ•ᚳᚦᚹ.ᛚᚦᚪᛁᛈ•ᛞᛟᛂ•ᚢᛉᚢᚾᛠᚠ•ᚩᚾᚪ•ᚱᛠᚷ•ᛗᚢ•ᛗᛁᛂᛒᛗᚱᚾᛗ•ᚩᚾᚠᚣ•ᛗᚠᛇᚠᛂ•ᛒᛡᛈᛂᛖᛡᛏ•ᛈᛟᚫᛏᛟ•ᚻᛖᚾ•ᚳᛇᚩ•ᛋᚻᚫᛇ•ᛝᛁᛟ•ᛇᚠᚢᛞᚣᚪᛚᚠ"
Page49 = "ᛡ•ᛖᛂ•ᚠᛚᛟ•ᛁᚳ•ᛁᛝᚷᚦ•ᛗᛋᚫᚷᚪᛠ•ᛗᛁ•ᛒᛡᛏᚾ•ᛝᛗᚦ•ᛏᚣᚫᛂ•ᛖᚻᚠᚪᛡᚷ•ᚪᛗᛁ•ᛞᛉᛏ•ᚢᛖᚦᚾ•ᛖᚪᛈᚹᛠᛚ•ᛒᚢᚱᛡᛟ•ᚪᚣ•ᛟᛇᚹᛂᛈᛞ:"
Page50 = ""
Page51 = "ᚹᚹᛈ•ᚠᛡᛚᛉᛒᚾ•ᚳᛗᚾᚱᛗ•ᚻᚦᚫᛞᛂ•ᛒᛡᚫ•ᛇᚹᛗᚢ•ᚪᛈᛡ•ᛈᛁᛂ•ᚪᚢᚾᛠᛖᛞᛗᚪ•ᛏᛟᛗ•ᛋᛞᛝᚷᛚᛋᛞᛝ•ᛟ•ᛋᛂᛞ•ᛚᛟᚠᛂᚫᚠᚪ•ᛝᛟᚣᛈ•ᚣᚩᛒᚷᚳᛖᛏᚹ•ᚪᛋᛒ•ᛗᛠᚣᛇᛗᚫᛚᚱ•ᚹᛇᛂᛒ•ᛈᛚᚠ"
Page52 = "ᛈ•ᚠᛗ•ᛝᚪᛇᚾᛟᚹᛇᛉ•ᚣᚫᛉᛞᛟᚱᛒ•ᛡᚱᛟ•ᚹᛏᚷᚱᛂᛖ•ᛠ•ᛈᛚᛞ•ᚻᚦᚱ•ᚦᚣᛚᛉ•ᛠᛈᚫᚠᚪ•ᚫᚪᛒ•ᛈᛋ•ᛗ•ᛏᚫᚳᛈᛝᚹᚦ•ᚻᛠ•ᛞᚩᛂᚷ•ᛋᚩᛠᚳᛖᛋ•ᚣᛖᚫ•ᛈᚦ•ᛁᛇᛈᚳᛝ.ᛈᚳᛇᚢᛏᚳᛡᛇᛝᚾᚢᚻᚦ•ᚣᚠᛗᚾ•ᛝᚠᛂᛉᛟᚱᛗ•ᛝᛠᛂᛏᚳ•ᚢᚷᚦ•ᚠᚦᛋ•ᚪᛈᚩᚪᚫᛞᛋᛝ•ᛒᛗᚩᚷ•ᚹᚠᛗᛖ•ᛠᛇᚻᚠᚻᚳᚱᚫ•ᛝᛗᛉᚳ•ᛋᚪᚹᛋᛠ•ᚩᚣᛚᛉᛝ•ᛠᛟᛉᛟᛠᛡᛝᛒ•ᛝᚳᚫᛁᚱ.ᛒᚠ•ᛏᚣᚣ•ᛠᛒ•ᚣᛚᚩ•ᛇᛉ•ᚩᚷᛗᚩ•ᚠᛚᛟᛝᚦᛠ•ᚦᚣᛖᚣ•ᚾᚷᚾ.ᛡᛏ•ᛂᛟᚾᛁ•ᛋᛟ•ᛠᚦᚣ•ᛋᛒ•ᚫᛚᚪᛂᛡᛖᚷᛉᛡᚾᛉᛏ•ᛡᛒᚻᛚᚷ•ᚢᚦᛠ•ᚢᚾᛁᚩᛗᛠᛁᚷ•ᛟᚦᚱᚣ•ᛒᛖᛠᚩᛈ•ᛗᛏᚱᚫᚢᚻᛁᛝ•ᛇᚳᚠ•ᛂᚾᚱᚷ•ᛟᚷᚻᚣᚻ"
Page53 = "ᛇᚫᛠᚫᚣ•ᚢᛗᛈ•ᛉᛁᚢᚾᚩᛟᚾ•ᚷᛞᚦ•ᛡᚫᚹ•ᛞᛟᛖᚱ•ᛗᚾᛖᚻᚷᛒᚢᛂ•ᚢᚦᛗᛖᛞᛝ•ᛒᚷᚣᚱ•ᛖᛁᚢᛂ•ᚣᛡᛚᚢ•ᛂᛟ.'ᛠᛉᚣᛇᚱ•ᚩᛈᛋᚳᚫᛗᛇ•ᚾᛂ•ᛖᚠᛋ•ᛖᚠᚪᛝ•ᚢᛝᛂᛇᚷᚠᛝᚱᛁᚦ•ᛂᚢᚫ•ᚣᛋᚠᛖᚢᛋᚫᚣᛠ•ᛁᛏᛟᚱᛏᛟᚩ•ᚷᚾᚻ•ᛞᛗᚩᚳᛞᛖᛏ•ᚹᛉᛞᛚ•ᚩᚫᛂ•ᛇᚢᛒ'•ᛗᛏ•ᛞᛗᛖ.ᛏᛈᚹᛇᛋ•ᚹᛒᛇᚦ•ᚾᚻᚷᛂ•ᚱᛡᛞᛡᚦᚪᛁᛇᚫᛉᛚ•ᛇᛠ•ᛡᚪᛂ•ᚻᚱ•ᚦᛈᛞᛂᛝᚩ•ᚷᚠᛇᛗᚳ•ᚻᛞᚩᛏᚳ•ᚢᚱ•ᛈᚾ:"
Page54 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ:ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•ᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•ᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣ"
Page55 = "ᛝ•ᚫᛗᛁᚹ•ᛋᛒ•ᛉᛗ•ᛋᛇᚷᛞᚦᚫ•ᚠᛡᚪᛒᚳᚢ•ᚹᚱ•ᛒᛠᚠᛉᛁᛗᚢᚳᛈᚻᛝᛚᛇ•ᛗᛋᛞᛡᛈᚠ•ᛒᚻᛇᚳ•ᛇᛖ•ᛠᛖᛁᚷᛉᚷᛋ•ᛖᛋᛇᚦᚦᛖᛋ•ᚦᛟ•ᚳᛠᛁᛗᚳᛉ•ᛞᛂᚢ•ᛒᛖᛁ:"
Page56 = "ᚫᛂ•ᛟᛋᚱ:ᛗᚣᛚᚩᚻ•ᚩᚫ•ᚳᚦᚷᚹ•ᚹᛚᚫ,ᛉᚩᚪᛈ•ᛗᛞᛞᚢᚷᚹ•ᛚ•ᛞᚾᚣᛂ•ᚳᚠᛡ•ᚫᛏᛈᛇᚪᚦ•ᚳᚫ:ᚳᛞ•ᚠᚾ•ᛡᛖ•ᚠᚾᚳᛝ•ᚱᚠ•ᚫᛁᚱᛞᛖ•ᛋᚣᛂᛠᚢᛝᚹ•ᛉᚩ•ᛗᛠᚹᚠ•ᚱᚷᛡ•ᛝᚱᛒ•ᚫᚾᚢᛋ:"
Page57 = "ᛈᚪᚱᚪᛒᛚᛖ:ᛚᛁᚳᛖ•ᚦᛖ•ᛁᚾᛋᛏᚪᚱ•ᛏᚢᚾᚾᛖᛚᛝ•ᛏᚩ•ᚦᛖ•ᛋᚢᚱᚠᚪᚳᛖ.ᚹᛖ•ᛗᚢᛋᛏ•ᛋᚻᛖᛞ•ᚩᚢᚱ•ᚩᚹᚾ•ᚳᛁᚱᚳᚢᛗᚠᛖᚱᛖᚾᚳᛖᛋ.ᚠᛁᚾᛞ•ᚦᛖ•ᛞᛁᚢᛁᚾᛁᛏᚣ•ᚹᛁᚦᛁᚾ•ᚪᚾᛞ•ᛖᛗᛖᚱᚷᛖ::"

Pages27to32 = "ᛗᛈᚣ•ᛚᛋᚩᚪᚫᚻᛚᛖᛇᛁᛗᛚ•ᛚᛋᚳᛈ:ᚾᚻᚷᚢᛡᚻᚢ•ᛒᚠ•ᛞᛂᚢ•ᛒᛖᛁ•ᚫᚠ•ᛈ•ᚫᛈᚦ•ᚱᛗᛚᚳ•ᛒᚷᚣᛗᛠᛒᚫ•ᚾᚦ•ᛗᚠᛡᛠᚳᛒᚷᚫᚠ•ᛖᛂᚱᚩ•ᛈᛒ•ᚠᛒᚩ•ᛇᚱᛠᚱ•ᛠᚷᛖᛚ•ᛇᚱᚾᛋᚩᚩᚳᚪᛖᚣᛖᛖ•ᛏᚱ•ᚢᚣ•ᛟᛂᛉ•ᛠᚷᛝ•ᚣᛏᛝᚾ•ᚪᛏᛋ•ᛝᚪᛂ•ᚠᛚᛋᚢ•ᚹᛠᛈᛁᛏ•ᛁᚾ•ᚱᚱᛝᛗ•ᚣᛗᚠᛁᚫᛁᚪ•ᚢᛟᛒᚹ•ᛗᛁᚻᚣᚹᛞᛚ.ᛟᛏᛞ•ᛟᚳᛒ•ᛡᛒ•ᚪᛏ•ᚹᛏᛈ•ᚹᛠᚩᚱᚩᛖ•ᚣᛚᛋ.ᚢᛡᚱᚠᛂᛇᚱᛡᚦᛖᚢᛏ•ᛝᚫ•ᚾᚪᛠᚩᚪᚾᚪᚦᚷᚩ•ᚫᛉᛒᛏᛖᛠᛗᚷᚱᛗ•ᚣᛝᚠᛒ•ᛞᛟᛞᚪ•ᛠᚱᚳᛁᛈᛞᚠᛗᛝᚻ•ᛋᚩ•ᛞᛈᛉᚾ•ᛟᚱᛡᚾᚳᚳᛏ•ᚾᛈᚠᛈᚳ•ᛂᚦᛒᛁᚹ•ᛞᚹᛝᛠᛡᚹᛚ•ᚹᛂᚾᚪᛟ•ᛏᛞᛉᚣᛖᚱᛞ•ᚱᛏᛇᛁᚳᛈ•ᛝ•ᚦᛟᚷᛂᚦ•ᚣᛋ•ᛠᚻ•ᚠᛒᛚ•ᛁᚫᛚᛞᛉᚪ•ᛁᚹᚷ•ᛒᚩᚹᚾᛠ•ᛋᛖᛗᛒᛋ•ᚳᚹᚦᛟᚠᚻᚫ•ᛞᚢᛁᛒᛞ•ᛇᛝᛈᚠᛁ•ᛟᚢᚣᛏ•ᚻᚱᛖᚾᚳᛈᛡᛈᛞᛂ•ᛁᛏᛗᛋᚫᛉᚩᚣ•ᚪᛂᛗᛡᛖ•ᛇᛂᚠᛗᚱ.ᛞᛟᚪᛒᛞᚻ•ᚾᛈᚪ•ᛇᚱᚻᚾᛝᛠᚠᚾᚠ•ᚩᛗᛋᚾ•ᛠᚪᛁᚢᛚ•ᚪᚫ•ᛂᛉᛡᚠ•ᛁᛖᛈᛠᚻ•ᚠᛇᚩᚹ•ᛠᛂᛇᛁᛠᚫ•ᛂᛒ•ᛋ•ᚠᛖᚷ•ᛋᛁ•ᛟᛗᛒᛁᛝᛏᚪᚢᛁᚦ•ᚩᛝᛗᚠ•ᚹᛟᛒᛟᛡ•ᚠᚣᛝᚩᛠ•ᚳᛚᛈᚱ•ᛞᛂᚩᛝᛂ•ᚪᛖᛗᛈᚾ•ᚠᛠᚷᛞᛒ•ᚩᛉᚷᚾᚣᚷ•ᛠᛈᛂᛞᚾᛟᚩᚢᚾᚹᛗ.ᛂ•ᚢᚷᛠ•ᛗ•ᛇᚪ.ᚻᚦᛡ•ᛝᛈᛞᛒ•ᚳᛉᚳ•ᛠᛉ•ᛟᚣ•ᛒᚦᛁᛂᛚᛡᛝᛡ•ᚹᛂᚫ•ᛋᛗᚪᛡᛠᛇᛝᛏ•ᚦᛞᚷ•ᚢᛏᛚᛏᚣ•ᚢᛝ•ᚷᛟᚪᛏ•ᛂᚦᚣ•ᚫᚻᚪ•ᛒᛝ•ᚦᚢᚱᚪᚾᛞ•ᛁᛝᚫ•ᛚᚫᚷ•ᚹᛁᛒᚣ•ᚾᚫᚠ•ᛚᛋᛒ•ᛈᛟᚪᛟᛞᚷᛟᚣᛉᚷᛚ•ᛋᛠᛁ.ᚳᛟᛁᚦᛈᚹᛉ•ᛖᚢ•ᛟᛂᛝᛋᚢᛝ•ᚳᛡᛠ.ᛚᛇ•ᛚᚷᚢᛁᛏᛒᛋ•ᛞᛁ•ᚠᚠᚷᚠ•ᚦᛂᚳ•ᚫᛟ•ᛁᛗᛡᛁᛇᚦ•ᚩ•ᚢᛈᛒ•ᚻᛋ•ᛂᚣᛂᛖ.ᛒᛇᛇᚱ•ᚹᛂᛏᛡ•ᚳᚪᚫ.ᚩᛈᚱ•ᛡᚾᛗᛁᛝ•ᚻᚹᚦ•ᛡᚦᚻᚦ•ᛉᚫᚫᛋᚳᛡᚾᛇ•ᛟᛉᚢ•ᚱᛂᛖ•ᛚᚾᛞ•ᛗ•ᛏᚱᛟᚦ•ᛁᛝᛡᛒ•ᚳᚩᚹᛟ•ᛏᛗᛋᚱᚷ•ᚱᛚᛞᛚ•ᚩᚣ•ᛞᚳᚪᛖᛞᚠᚳ•ᛇᛖᛉᛚᚫ•ᛖᚩᛁᛋ•ᛡᛁᛟᛋᚪᛒᛗ•ᛗᚣᚹᛂ•ᛖᚫᛝᛚ•ᛂᚱᛇ•ᛈᛚᚩᚻ•ᚪᛞ•ᛡᛂ•ᛞᚠᚹᛞᛂᚳ•ᚾᚦᛉ•ᛂᚻ•ᚷᛚ•ᚠᛖᚦ•ᛇᚻ•ᛝᛖᛒᛚᛞᛁᛗᚠ•ᚹᛒᛗᛟᛁᛖᛁᛠ•ᛈᚻᛝᛖᛞᛟᚩᚻᛂ•ᚹᚩᚾᛂᛈᛗ•ᛖᚳ•ᛖᛇ•ᚷᚻᛗᛞᚪᛈᛖ•ᛗ•ᛉᚫᛒᛇᚱ•ᛖᚣᛟᚣ•ᚱᛠᛈᚢᛠ•ᚣᛖᚪᚻ•ᚩᛉᛠᚢᚻᛡᛟ•ᚷᚫᚩᛒᛉ•ᚫᚱᛞᛋᚩᚱ•ᚷᛠ•ᛉᚻᛁ•ᚷᚳᛞᛠᛡᚳ•ᛂᛠᛉᛇᚻᛋᚹ•ᛝᛡᚷᛖᛡᚣ•ᛠᚩᚷ•ᚱᚦᚠᛟᚩᚦ•ᚦᛁᛏᚱ•ᛇᛉᛇ•ᚢᚷᛠ•ᛟᛏ•ᚩᚠᛚ•ᛟᛝᛈ•ᚱᛡᚪᚩᛏ•ᚩᛠᚷᚫᛗ•ᛈᛋᚱ•ᛖᚦᚠ•ᛞᚹᚾᛚ•ᛝᚩᛇᛂ•ᚳᛚᚢᚹᛏ•ᚩᛖᛏᚠᚪᛚ•ᛟᛇᛟ•ᛠᚱᛇ•ᚢᚪᚦᛈᛟᛡᛉ.ᛡᛒᚱᛒᚠᚢᛚᚢᛟ•ᛒᛇᛒ•ᛉᚦᚹ•ᛝᚣᛖ•ᚳᚫᚣᛟ•ᚹᛁᛝᚫᛏ•ᚫᛇᛈᛡᛟᚠ•ᛚ•ᛝᚠᛡ.ᛞᚪᛚᛈ•ᛋᛁ•ᚢᚣᚪᛚᛠᛝᚹ•ᚪᛏᛈᚳᚣ•ᛝᚫᚻᛗᛞᚷᛚ.ᛠᛉᛒ•ᛇᛡᛋᛖ•ᚣᛁᛚ•ᚣᛠᚣ•ᚻ.ᚣᛉᚾᛏᚫᛉᛋᚦᚪᚹᛗ•ᚪᚱ•ᚪᚩᚻ.ᛗᛖᚫᛞᛠᛁᛗ•ᛒᛟᚾᚳᚩᚱᛉ•ᛋᚹᚫ•ᚻᛖ•ᛋᚠᚾ•ᚢᚦᛟᚷᛖᚪᛟᛇᛇ•ᚦᚳᛒᛝᛏᛉᛡᛞ•ᛋᛡ•ᚩᚠ.ᛈᛖᛞᛋᛁ•ᛚᛁᚻᚾᛝᚱ•ᚻᛈ•ᛇᚢᚫᛞ•ᛚᚻᛉᚳᛈ•ᛁᛗᛉᚳ.ᛂᚫᚾᛞᛋ•ᛏᛚᛡᚩᛋᛗ•ᛚᛞᚾ•ᛈᚫᛏᚷᛈ•ᚫᚦᛂᛗ•ᛒᚻᚩᚻᛁᚷᚻᚳ•ᛚᚹᛋᚱᛇᛗᛏ•ᛂᚳᛁ•ᛠᚦᛞ•ᛏᛚ•ᚱᛖᛠᛒᚪ•ᛒᚠᛒ•ᛁᛒᛡᛇᛏᚣ•ᛏᛖᚣᚳᚱᛋᚠ•ᛁᚦᚪᛉ•ᚪᚣᚫᛠ•ᛂ•ᛈᛗ•ᚠᛋ•ᚪᛒᚱ.ᛉᚣᚻ•ᚦᚩ•ᛇᛞᚢ.ᚠᛁ•ᚻᚩᚫᚠᚣᚷᚱᚪᛂ•ᛏᛉᛇ•ᛖᛠᛞ•ᛏᚠᚢᛝ•ᚫᛂᛖᛈᚳᛒᚦᚢᛝ•ᛡᛒᚹᚱ•ᛖᚾᛈᛇᚣᛇ•ᛉᚱᚹ•ᛒᛡᛞ•ᛖᚱᚩᚻᚣᛠᛈᚦ•ᛗᛁᚷᛚ•ᚹᛉᚫ.ᚠᛞᚾ•ᛂᛟ•ᚻᛚᛡ•ᛗᛖᚷ•ᛟᛁᛡ•ᚻᛟᚱᛇᚹᚣᚠ•ᛈ•ᛂᚷᚦ•ᚪᛒᛝ•ᛈᛒᚪᛖ•ᚢᚹᚻᚩᛒᛋᛉ•ᚹᛞ.ᚦᛇᚱᛖ•ᛂᚾᛞᛝᚹᚪ•ᚻᛖᚹ•ᛟᛡᛂᛡᛟᛝᛂᛉᛚᛂ•ᛞᛉᛟᛈ•ᚱᚪᛁᛏᚷᛉᛝᛇ•ᛠᛗᚩᛚ•ᚦᚫᚹ•ᚫᚢᛈᛡᚳ•ᚹᛝᚻᚹᛒᛗᛋᛟᛖᛁᛡ•ᛟᚹᚦᚻᛒ•ᛡᚱᛏᚦᚠ•ᚠᚩᚦ.ᚻᚩᛗᛖᛉᚹᛞᛋᛚᚠᛞ•ᛝᛒᛇᛡᛚᚪ•ᚹᛞᚾᚫᛉᛏᚣᛗᚷ•ᚦᚹᛉᛡᚦ•ᚹᛒᛋᚱᛉᛡᛉᚪ•ᚢᛒᚻᛠ•ᚹᛝᚢᚻᛇᛝᛡᛠᛂ•ᛋᛈᚦᛏ•ᛟᛝᚩᛗᛒᚢᛞᛋ•ᛒᛂ•ᛠᚱᛟ•ᛖᚾ•ᚾᚹᚷᚢᛚᚪᚩᚣ•ᚢᛏᚠᛂᛏ•ᚪᚷᛒᛇ:"


        
Page54to55 = "ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ:ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•ᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•ᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣᛝ•ᚫᛗᛁᚹ•ᛋᛒ•ᛉᛗ•ᛋᛇᚷᛞᚦᚫ•ᚠᛡᚪᛒᚳᚢ•ᚹᚱ•ᛒᛠᚠᛉᛁᛗᚢᚳᛈᚻᛝᛚᛇ•ᛗᛋᛞᛡᛈᚠ•ᛒᚻᛇᚳ•ᛇᛖ•ᛠᛖᛁᚷᛉᚷᛋ•ᛖᛋᛇᚦᚦᛖᛋ•ᚦᛟ•ᚳᛠᛁᛗᚳᛉ•ᛞᛂᚢ•ᛒᛖᛁ:"



        
Page40to53 = Page40 + Page41 + Page42 + Page43 + Page44 + Page45 + Page46 + Page47 + Page48 + Page49 + Page50 + Page51 + Page52 + Page53


allpages = "ᛋᚻᛖᚩᚷᛗᛡᚠ•ᛋᚣᛖᛝᚳ:ᚦᛂᚷᚫ•ᚠᛂᛟ•ᚩᚾᚦ•ᚾᛖᚹᛒᚪᛋᛟᛇᛁᛝᚢ•ᚾᚫᚷᛁᚦ•ᚻᛒᚾᛡ•ᛈᛒᚾ•ᛇᛂᚦ•ᚪᛝᚣᛉ•ᛒᛞᛈ•ᛖᛡᚠᛉᚷᚠ•ᛋᛈᛏᚠᛈᚢᛝᚣᛝᛉᛡ•ᚣᚻ•ᛒᚢ•ᚷᚩᛈ•ᛝᚫᚦ•ᛁᚫᚻᛉᚦᛈᚷ•ᚣᚠᛝᚳᛂ•ᚦᚪᛗᛁᛝᛁᛡᚣ•ᚻᛇ•ᛏᚻᚫᛡ•ᛉᚣ•ᛖᚢᛝ•ᚳᚠᚾ•ᛇᚦᛂᛁᚦ•ᚦᛈ•ᚣᛝᛠ•ᚣᚾᛖᚣ•ᛞᛉᛝᚹ•ᛒᚳᛉᛞᛒᚠ•ᛗᛏᚾᛖ•ᛠᛂᚾᛚᚷᛒ•ᛉᚷᚦ.ᚣᛁᛞᚪ•ᛝᚷᛗᛂᚱᚩᛚᛇ•ᚣᛏᛈᛁᚦᛞᛂ•ᛟᚻᛚ•ᛠ•ᚠᛉᚫᛈᚷᛉ•ᚠᛚᚹᛇᛏᚫ•ᚠᚷᚾ•ᛗᛇᛚᚾ•ᛝᛗᚠᚱᛡ•ᚪᛋ•ᛠᛗᛝᛉᛉᛇᛞᛒ•ᛟᛞᛗᚩ•ᛠᛇᚻ•ᛞᛝᚷ•ᛟᛝᛚᚢᚱᚾᛏ•ᚫᛋᚣᚢᚻᚱᛏ•ᚻᚳ•ᛋᛟᛏᛟᛝᚢᚱ•ᛋ•ᚠᚩᛖᚹᛠᛟᛚᚠᚫ•ᛗᚱᛝ•ᛞᚪᛗᚱ•ᚹᚪᛁᛗᛋᚾ•ᛋᛟᚱᚢᚹᛋᛚᛡ.ᛟᚪᚫᛝᛋᛞᛈᛏ•ᚳᚱᚦᛡ•ᚱᛒᚩᛞᚦᚠ•ᚣᛉᛁᛏ.ᛟᛁ•ᚠᛚᚩ•ᚠᛠ•ᚱᚩᛟᛗᚻᛗᚷᛈᚻ•ᚫᚻᚾᚩᚻᚣ•ᛟᛋᛚ•ᚾᚷ•ᚫᚣ•ᛟᚳᛒᛚᛂ•ᛝᛚᛟ•ᚫᛂᛠᚹ•ᛠᚦᚩ•ᛒᛟᚣ•ᚳᚠᚳᛂ•ᛚᚫ.ᚾ•ᚦᛈ•ᚢᛉ•ᛟᛉᚷ•ᛈᚠᛋᛇᚫᛟ•ᛝᛈᛇᚩᛖᚪ•ᚷᚫᛡᛝᚦᚩ•ᛈᚪᛟᚦᚱᛝᚫ•ᚳᛋᛒᛇᚣᚻ•ᛏᛉᛖᛚᚱ.ᚷᚹᚣ•ᛂᚠᛁᚾᛡᚳᚣᛠᛁᛡ•ᚩᚦ•ᛖᚳᚫᚳᛉᛡᛠ•ᚩᛚᚳ•ᚠᚱᛞᛝᛖᚢ•ᛞᚳᛚᛠᛋᛉᚳᚷᛡ.ᚹᛋᚦ•ᚠᛞᛝ•ᛁᛡᛗᚪᚫᚷ•ᚹᛋ•ᚾᛞ•ᚳᛈᚦᛉᛈᛠᛠ•ᚹᚢ•ᛠᚹ•ᚠᚹᛂᚣ•ᛉᛞᚹᚳᚷᚳᛟ•ᛞᛉᛟ•ᚱᛡᚷ•ᚾᛈᚪᚣᛈ•ᚳᚣᚻ•ᚠᛖᛂᛠᚾ•ᛟᚫ•ᚢᚪ•ᚻᚱ•ᛖᛠᚦᚠᛂᚪ•ᛚᛉᛋᛏ•ᛗᚠᛚᚠᛏ•ᚷᛁᚦ•ᚢᛚᚷ•ᛉᛠᛏᛋᛚᛂᛈ•ᛚᛉᛁᛟᛗ•ᚢ.ᚻᛏ•ᛒᛇᛚᛞᚻᛒᛗ•ᛠᚱᛒ•ᚾᚻᛒᛖᚷᛇ•ᛞᛚᚹᛇᛡᛈᚩ•ᚻᛖᛠ•ᚹᛁᚱᛁᚻ•ᚢᚦᚻᚣ•ᚾᛉᛒᚷᛂᛈᚢ•ᛝᛠᚠᚾᛁᛖᛞᛡᛝᚱ•ᛞᛒᛂᛡᛟᛗᛁ•ᚠᛏ•ᛂᛞᛁᚦᚱᛚᛋ•ᛖᛇᚩᚷᛒᛏᛞ•ᚦᚪᚾᚳᚣ•ᛡᛋᚦᛞ•ᛝᚠᛚᛖᚷᚻᚳ•ᛖᚩᛁᛏᚾᛉ•ᛈᛏᚠᚻᚱᛞᛖᚠᛏ•ᚫᚹᚻ•ᛒᚳ•ᚠ•ᛈᚪᛚᚢᛠᚾᛚᛂ•ᛂᚳᛚᚹᛠᛞᚢᛞᛇ•ᛠᛉᛞᚹᚻᛠ•ᚦᛡᚫᚳᛚᛏᚹᛖᛁᚳ•ᛈᛟᛞᚳ•ᚾᚻᚪ•ᚱᛁᚷᚦᛠᛖᛏᚷ•ᚦᚻᚩᛡᚹᚫᛂᛖ•ᛝᛠᛞ•ᚩᚫ•ᚪᛚ•ᛒᛂᚳᚢᛉᛏᚪᛒᛂᛈ•ᚠᛠ•ᚻᛞᚾᛡᚢᛈᛋᚢᚹ:ᛚᛂ•ᛇᚻᛝᚳᚦᛏᚫᛂᛏᛉᚻ•ᛏᚢᛟ:ᛋᛈᚱᚷ•ᚣᚾᚪᚷᛇᛝᚾ•ᚹᚠᚣᚾᛒᛠᛡ•ᛈᚾᚣᚪᛋᛗᛒ•ᛡᛠᛡᛁ•ᚩᛒᚱᚾᛚᛠ•ᚱᛚᛚᛖᛒᚹᚾᚻᛗᚠᛟᛒ•ᛝ•ᚱᚪᛡᚷᛟᛇᛏᛗᛉ•ᛞᛇ•ᛗᚣᚻᛠ•ᛁᛚᛋ•ᚾᚹᚳᚠᛈᛗᛈᛚ•ᛠᛋᚦᚠᛟᛡ•ᚦᛖᚣ•ᚳᛂᛚᚳᛡᛗ•ᛒᛞᚳᛇ•ᛂᛁᛏᛟ•ᛞᛠᛖᛡᚾᛏ:ᛈᛞᚦ:ᛇᛞᛇ•ᚫᛚᚳ•ᛡᛇ•ᛠᚻ•ᚹᛗᚣᚦ•ᚢ•ᚻᛏᚦᚱᚻᛝ•ᛚᛝᛋ•ᚾᚫᛠᚷᛋᛚ•ᛋᛉᚩᚻᚹᛞᛗᛖᛗᚪᚠ•ᚳᚣᚳᚫᚾ•ᛏᚦᚷ•ᛁᛂᛁ•ᚳᛞᛡᛉ•ᚻᚫᚫᛠᚷ•ᛠᛝ•ᚠᛏᚩᚱᛞᚳᛇ•ᚠᚢᛉᛠᛒᚩ•ᛉᛁᚣᚷᛋᛋᛒᛠ•ᚩᛁᛈ•ᛁᛂᛁᚩᛖ•ᚻᛠᚻᛚᛡ•ᚣᛈᛉᛁᚹᛗᚳᛁ•ᛚᚷᚠᚾᛡᚳᛉ•ᛈᚩᚱᛡ•ᚻ•ᛂᛗ•ᛟᛉᛝ•ᚢᛗᛇᛠᚷᛝ•ᛝᚹᚳ•ᛚᛝᚢ•ᛉᛂᚠᛟᚢ•ᚷᛠ•ᛗᛉ•ᚪᚹ•ᛚᚢᛉᚫ•ᛗᛞᛝᚻᚱᚣ•ᚻᚪ•ᚷᛁᚠᚷᚳ•ᚫᛝᛂᛇᛉᛡ•ᚾᚦᛒᚢᛂᚱ.ᚹ•ᚷᛚᛟᚷ•ᚦᛇᚠ•ᚦᛠᛁ•ᛋᚷ•ᚷᚣ•ᛠᛡᛈ•ᛡᚫᛚ.ᚦᛠᛉᚫ•ᛖᛗᛖᛏᛟᛏ•ᛠᚳᚠ•ᚳᛠᚷ•ᚦ•ᛈᛁᚳᚾ.ᛇᚣᛝᛂᛝᛗᚹᚳᚾ•ᛒᚣᛠ•ᚩᛟᚷᚱ•ᛗᚱᛗᛈᛡᚹ•ᚫᛟᚦᛟ•ᛈᛉᛂᛚ•ᚱᛚᚱᛒᚪᛈᛏᛉᛚᛏ•ᛗᛉᛁ;ᚹ.ᛂᛋᛟᛗᚾᚱᛖᛒᛋ•ᚳᛏᛚᛟ•ᛋᛒᚠᛉᚦᚪᛠᚢ•ᛇᛉ•ᚱᚷᛏᛇᛠᛁᛂᛒᛟ•ᛉᚷᛂᛝ•ᛠᚦ•ᚱᛝᛒ•ᚾᚢᚪᛝᛒᛈᛋᛠ•ᛈᚹᚩᚻᛖ•ᚫᛇᚷᚾᚫᛋᛇ•ᚩᛈᛗ•ᛖᛉᛡᛒᚹ•ᚢᛖᛁᛞ•ᛈᚪᛇᚷᛋᚳᚷᛞᛈᚣ•ᛡᛚᚦᚱ•ᚳᚢᚠᛇᚦ•ᛉᛖᛚ•ᚢᚱᚫ•ᛉᚻᛂᚫᛗᛚᚠ•ᚳᛝᛞ•ᛁᛝᚩ•ᚳᛋᛟᛖᚣᛟᚻᚢ•ᚷᛞᚹᚪ•ᛖᛋᚷᛝᚠᛉ•ᛞᛉᛂ•ᛠᚻᛁ•ᚦᛈᛉᚣ•ᛡ•ᛇᛞᛇᛝᛇᛝ•ᛖᛠᛞᚱ•ᛚᛇᛏ•ᛉᛏᚣ•ᚱᛇ•ᛈᛝᛇᛈᚩᛁᛚᛖᚠ•ᛇᚫᚪ•ᚣᛝᚠᚣ•ᚠᛞᚾᛚ•ᛉᛏᚾᚫᛋ.ᛁᚩᚳᚢ•ᚣᛠᚾᛏᚷᚳᚪ•ᛉᛡᛇ•ᚦᛂᚣᛂᛚᛟᛖᛚ•ᚣ.•ᛈᛡ•ᛖᚹᛟ•ᛇᚾᚪ•ᚻᛞᛇᛋ•ᚦᚣᛇᚦᛂᚦᚱᚢ•ᚳᛠᚪ•ᚢᛂᛡᛈ•ᚣᚫᛇᛋ•ᚻᛠᛏᚣᛞᚣᚫᚠᚻᚩ•ᛟᛗᛉᛟᛂᚷ•ᚢᛡᚱᛡᚳ•ᛁᚠᛟ•ᛁᛂᛈᛒ•ᛖᛝᚣᚦᚩᚫᚣ•ᛠᛉᛡᛖᛚ•ᛁᚱᚣᛞᛠᛂ•ᚫᚳ•ᛗᚷᛁᚫᚢᚪᚫ•ᛂᚪᚻᛈ•ᚠᛞᛚᛁᛠᛈᛟᚣᚩ•ᚢᛒᚷᛝᛟᚢᛝᛋᚢᚳ•ᛏᛞ.ᚫᛈᚩᛂ•ᛒᚻᚱᛁᚷᚻᛂ•ᚣᚹᛗᛇᚾᚫ•ᛞᛝᛇ•ᛟᛂᛝᚳᛖᛠ•ᛉᚪᚱᚣ•ᚪᚢᛏ•ᚳᛈᚳ•ᚩᛇᛟ•ᚫᛈ•ᛏᛉᚳᛏᚻᛞᛇ•ᛉᛒᛠ•ᚫᚾᛂ•ᛠᚪᛒ•ᛖᛠᚹ•ᛡᛚ•ᚹᛁᛡᛋᛈᛚᚦᚪᛋᛂ•ᛡᛞᚣᚱᛞᛟ•ᚦᚱᛉᛟᚹ•ᚣᛞᛏ•ᚷᛚᛡᚻᚹᛗᚱ•ᛝᚠᚳ•ᚱᚫᛁᛒᚷᛈᚣ•ᛞᚪᚱᚪᛉᛟ•ᚢᚩᛁᛠ:ᚪᛏᛉᛒ•ᛗ•ᚷᛡᛋᛒ•ᛉᛇ:ᚷᚾᛠᚫᚷᛝᛞ•ᛉᛖᛏᚩᚷᛡ•ᛝᚻᛏ•ᚳᛁᚣ•ᛂᛏ•ᛟᚩᚻᚱᛂ•ᚳᛖᛡᚩ•ᛞᚪᛏᚣᚢᚾᚱᛇ•ᚫᚫᛁᛖᚠᛝᚦᚻ•ᛉᛁᛟᛋᛁ•ᛗᚪ•ᚢᛂᚳᛋᚹᚾᚣ•ᚩᛈᛉᚱ•ᛚᚫᛟᛏᛡ•ᛂᛈᛗ•ᛞᛋᚠᛗ•ᛟᚹ•ᛞᛚᛏ•ᚷᚱ•ᚩᚢᛋᚻᚪ•ᚣᛇᛡᛚᚢᚻ•ᛈᚹᛂᛚᚷᛒ•ᛗᚢᛂᛗ•ᛇᚾᛇ.'ᚫᛚᚪᛚᚷᚪ•ᛋᚻᛝ•ᛚᚦᛒ•ᛋᚳᚢᚳᚩᛡ'•ᛚᚳᛂ•ᛉᚪᚾᛇᛉ.ᛠᛗᛈᚢ•ᛗᚠᛚᛠᛝ•ᛒᛉᛁ•ᛚᚦᚱ•ᛠᛡᛁᚳ•ᚩᛉᛖᛞᛡ•ᛏᛋᛗᛠᛂᛈ•ᛠᛟ•ᛡᚫᚦᚹᚻᛈᛇᚪᚷᛈᚻᛠ•ᚳᛚᛠᛈ•ᛡᚣᚾᛁ•ᛚᛡᛁᚳ•ᚫᛇᚾ•ᚫᚳᛡᚱᛡᛚᛞ•ᛒᛟᛝᛡ•ᛉᛗᛝ•ᚳᚻᛟᛠᚾᛈᚳᚦ•ᛁᛇᚦ•ᛇᚢᚩ•ᚦᛈᚪ•ᛡᛚᛟᚹᛡᛈ•ᛂᛗ•ᚷᛒᛈᛋᚾᛇ•ᛏᚩᚷᚢᚾᚫᛖ•ᚾᚣᛁᛖ•ᛞᛝ•ᛞᛝ•ᛚᚢᛚᛉ•ᚪᚾᛝ•ᛇᚪᛂ•ᚻ•ᛞᚹᛈᚫᚹᚫ•ᛇᛁᛚᛝ•ᚦᚾᚳ.ᛒᛁᛏ•ᛠᚳᚩᛇᛖᛝ•ᚳᚻᛟᚻᚫᛂ•ᛟᛉ•ᛁᚳᛖᛏᛋᚹᛖᚾᛡᚣᛂᛗ•ᛖᚳᚪ::ᛞᚩ•ᛟᛏᚦᚫ.ᚳᚹᛂ•ᛉᛠ•ᚷᛠᛗ:ᛉᛁᛉᛗ•ᚢᛉᛗᚳᚦᛈᚩᛒ•ᛡᚾᛏ•ᛠᛉ•ᛈᚱᚣ•ᚩᚳᛠᛗᛝᚷᛉᛚᚢ•ᛝᛁᛏᚩ•ᛂᚠᛝ•ᛋᛚᚾᛞ.ᚩᛗ•ᛇᚫ•ᚱᛞᚹᛏᛂᚦ•ᚣᚦᛋ•ᚫᚣᛖᛋᛉᛟᛒ•ᛠᚱᛇ•ᛈᛝᚢᛈ•ᚩᚦᛉ•ᚪᚻᛟᚱᛝᚢᛖᚱ•ᚣᛚᛉᛚ•ᛡᛚᚱ•ᛈᚹᛇᚾ•ᛠᚪᚱᛉᛝ•ᚣᛋᚻᚢᛚ•ᛋᚣ•ᚷᚾᚢ•ᛇᚫᚾᚾ•ᚩᚫᛖᛞ•ᚪᚩᛂᛡᚢᚪᛉ•ᚱᛉᛡᛟᛂ•ᛗᛁᛇᛚᛠᚻᚦᛗᛠᚣ.ᚷᛒᚳᛈᛉᚳ•ᚾᛟᛟᛋᚷᛗᛈᛖᛏᛚᚾᛂ•ᛂᚳᛝᚩ•ᛁᚹᛚᛠᛒ•ᚠᚪᛖ•ᛏᛝ•ᚾᛈᛠᚩᛏᚦ•ᚻᛝᛉᛈᚻᛈᚳᛈᚱᚢ•ᛚᚠᛖᛟ•ᚷᚪᛒᚠᛁᚫᚠᚢᛟ•ᛗᚠᚣᛝᛂᚳ•ᚻᛏᚠᛚᚫ•ᛖᚦᛋᛚᚩᚢ•ᚫᚩᚪᛗᛟᚢᚹᛇ.ᛒᚾᛋᛚᛝᛂᛟᚾ•ᛗᛚᛒ•ᛟᛏ•ᚾᛞᛒᚩᚾᚦᛡᚻᛟ•ᚱᛈᚾᚠᛈᛞ•ᛋᚩᛁᛠᚣᚾ•ᛇᚣᚹᚫᚷᛂ•ᛝᛗᚪᚹᛈ•ᚪᚢᚾ•ᛈᛡᛗᛖᛞᛟ.ᛁ•ᛉᛡᛗ•ᚠᛈᚩ•ᚦᛉᛞ•ᚩᛞ•ᛋᛈᛉᛡᚷ•ᛟᚻᚠᚦᛉᛂᛟᛋᚦᚣᚦ•ᛏᚻᛋᚣ•ᚻᛠᚷᛚᚫᚱᛏ•ᚢᛋᛟ•ᚦᚠᚠᚣᛟᛡ•ᛇᚳᚣᛒᛚᛝ•ᛠᚱᚻᛞ•ᛂᚣᛏᚫ•ᚻᛞᚳᛋ•ᛉᚠᛞ•ᚦᛗ•ᚳᛇᛝ•ᚫᚾᛡᛠᚹᛁᛡ•ᛒᛗᛝ•ᚷᛈᛁᚳ•ᛠᛚᚷᛉᚣᚣᚱᛂ•ᛉᛁᛂᚢ•ᛖᚣ•ᚪᛝᛈ•ᛡᚫᚳ•ᛖᛠᚹᛒᚦᛟᚠᛗ•ᚫᚱᚠᚩᛏ•ᛝᛉᛞ•ᛗᛖᛡ•ᚩᛈᛋ•ᛇᛞ•ᛇᛟᚫᚾ•ᚷᛗᚣᛁᚫᛁᛂ•ᛈᛂᚩᛡᚷ•ᛈᚳᛂ•ᛚᛖᛡᚻᛚᚷᚱᛇ•ᛟᚣ•ᛠᚣᛗᚹᚾᚹ•ᚠᛁᛂᚢᛗᚫᚾᚳᛗᛠᛁ.ᚩᛇ•ᛒᛚᛞ•ᚾᚹᚠᚾᛒᚱ•ᛋᛟᚦᛡ•ᚪᛡᛏᚷᚷᚹ•ᚪᛋᛡᚦᛋᚦᛋᚠᛗᚷᛞᛠ•ᛝᛈᚩᚪᚣᛝᛈᛋ•ᛟᚾᛇᚪᛖ•ᚻᚢᚷ•ᚩ•ᚢᚦᛏ•ᛒᚷᚣᛝᚠᚣᛁᚻ•ᚹᛡᛠᚱᚫᚹᛡᛞᚪᚦᚳ•ᛉᚢ•ᛈᛏᛋᚢᛖ•ᚷᚦᛡᛚ•ᛖᛋᛠᛝᛉᛈᛉ•ᚾᛟ•ᛞᛟᛒ•ᚾᚹᚢᛁᛇᛚᛞ•ᛁ•ᚦᚣᚷ•ᛟᛈᛡ•ᛖᚪ.ᚠᛋᛉᛞ•ᛖᚷᚦᛠ•ᚾᛋ•ᛞᛟᛗᛖ•ᛗᚾᛉ•ᚹᛒᛠᛈᛟ•ᛗᛉᚫ•ᛂᚩᛞᚻᛡᚷᚠ•ᚣᛗ•ᛁᚷᛉᚻᚹ•ᚾ•ᛋᛗᚷᛠ•ᚣᛚᚱᛂᛗᛉᚣ•ᛇᚱᚢᛟ•ᚣᚦᚢᛟᚩ•ᚱᚢᚹ•ᛁᛒᚳ.ᛠᛏᛞ•ᛚᛖᛋᛂ•ᚳᛟ•ᚷᛞᛡ•ᚢᚹᛝᚻᚫᚢᛈ•ᛏᛈᚩᚣ•ᚾᛇᚦᛟᛏᛇᚳᚠ•ᛒᚪᚾ•ᛗᚦᛝ•ᛟᛠᚢᛁᚪ•ᚾᚻᛝᛉᚩ•ᛇᛁᛡᚠᛟᛒᚦᚠ•ᛋᛒ•ᚠᛞᛇ•ᚩᚦᛏ•7•ᚷ•ᛚᛂᛖᚫ.ᚣᛁᚫᚹᚻ•ᚫᛏ.ᛁᛉ•ᛉᚻᛞᚩᛠ•ᚫᛋᛝᛚᛝ•ᛖᚩᚻᛗᚩᛟᛒᚦ•ᚱᛚᛋ•ᚳᚻ•ᚪᛡᚾᛇᚱᛉᚦ•ᚣᛉᚻ•ᛡᚾᚢ•ᛗᛉᚹ•ᛖᛈᛖ•ᚩᚳᛈᚳᛞᚪᛉᚢᛗᛝᛟ•ᛋᚾᛟᛉ•ᚠᚱᚳᛒᚢᛂᚱᚫᛝ•ᛒᛋᛟᛠᛡᚪᛚ•ᛏᛟᚾᚫᛟᚪ•ᛁ•ᛡᛋᚳᛖ•ᚹᛒ.ᚾᛚᛝ•ᚦᚾᛁᛠ•ᛒᛡᚱᚠᛖᛁᚹ•ᚾᚠᛗᚢᚷᚾ•ᛂᛚᚳᚱ.ᛝᚣᛉᛋᚪᛟᚱᛉᚳ•ᛒᚫ•ᚠᚢᚪᛖᚪᚹ•ᛚᚾ•ᛂᛉ•ᚻᚦᛉ•ᛗᛚᚾᛖ•ᛏᛝᚦᚪᚩᚢᛗᚣ•ᚠᛝᚪ•ᚻᛡᛇᛡ•ᛚᛏᛁ•ᛇᛁ•ᚳᚢᚢᛖ•ᚳᛒ•ᚫᛇᚠᚦᚳᛚᚩᛉᛚᚩᛚ•ᚠᚳᛠ•ᚪᚠᛟᚫᚠ•ᚾᚳ•ᚢᛒᚱ•ᚾᛇᚩᛉ•ᛁᚳᛟ•ᛞᛉᛠᛝᚠᚱᛡᚳᛇ•ᛉᛟᛈᛗᛞᚳᚦᚹᛈ.ᛡᚻ•ᚾᚦᛇᛏᚹᛖᚢ•ᚫᛇᚦ•ᛝᛟᛏᚳᚷᛒᛠ•ᚪᚳᛒᚪᚩᚹᚫ•ᛉᚢ•ᚫᛖᛒ.ᛇᛏᚢᚩ•ᛟᛞᚠᚢᛋ.ᛡᛂᛗᚦᛠᛏᚪ•ᛒᚹᚣ•ᛏᛂᚻᚦᚫ•ᛚᚪᚱᚫᛟᚦᚩᚾᛟᛁᛖ•ᛡᚠᚷ•ᛋᚠᚦᛏ•ᛠᛡᛠᛁᚢᛡᛇᛝᛞ•ᛉᛏᚠᛒᚻᚢᛋᚳᚱᛇᚹ•ᛇᛈᛋᚢᛚᚪᛈᚢᚳᛖᚠᛞᛉ•ᚦᛠᛇᛝᚻ•ᚣᚱᛗ•ᛟᚾᛚ.•ᛈᚹᛞᚱᛂ•ᚪᛝᛞ•ᛁᚦᛏᚷᚢᚹᚳᚻᛖᚩᚪᛖ•ᛉᚪᚢ•ᚳᛁ•ᚱᚳᚹ•ᛠᛇᛏ•ᚦᚳᚻᚢ.ᛡᚹᛟ•ᚷᛇᛈ•ᚢᛈᚦ•ᚷᚣᚢᚪᛗ•ᚹᚳᛖᛝᚱᛠᛞᛏᚻ•ᛂᛁᛈᚻᚠᛉᛝᛈᚾ•ᛒᚳᚪᚷᛋᛟ•ᛉᛠᛈᚪᚩᚷᚠᚳᛡᛂ•ᛠᚢᚠᛋᛚ•ᚣᛚ•ᚢᛒ•ᛉ.ᚱᚣᚾ•ᛁᛠ•ᛚᚹᛋ•ᚠᚦᚪᛠ•ᛈᚷ.ᛏᚷᛡᛟᛠᛡᛒ•ᛉᛂᛒ•ᛖᚾ•ᛞᚠᛠᛗ•ᚦᚪᛗᚠᚪ.ᚻᛡ•ᛗᛁᛏᛟ•ᚻᚣᚹᛏ•ᚠᛒᛁ•ᚫᛖ•ᛝᛒ•ᛚᛏᛠᛉ•ᛟᛋᚾᛉ•ᚹᛏᛠᛏ•ᛖᚢᛡᛖ•ᛉᚾᛇ•ᛟᚳᚾᚠᚩᚾᚠ•ᚳᚪ•ᚷᚱᚩ•ᛠᚦᚹᚣ•ᛒᛁ•ᛝᛇᛟ•ᚣ•ᚷᛗᚩ•ᛁᚷᛂ•ᚩᛇ•ᚢᛁᛉᛝᚪᚱᛉ•ᛏᛂᛞᛈ•ᚾᛝᚷᛏᚢ•ᛚᚷᚳᛏ•ᚢᛒᛇ•ᛈᚩᚣᚢᛏ•ᛡᚫᛏᚹᛏᛇ•ᛡᚫᚫ•ᚦᛏᛝ.ᛠᚳᛁᛉᚻᚦᚣ•ᚻᛚᚾᛋᚱᛡᚫᛚᚫ•ᛖᚷᚻ•ᛞᚾᚻᛠ•ᚠᚪᚹᛖᚠᛂ•ᛒᛇᚱᚹᛏᛉᚾᛠᛖᛁ•ᚠᚾᛡᚳ.ᛋᛟᚹ•ᛈᚷᛝᛟ•ᚷᚦᚠᛂᚷᚳ•ᛒᛁᛗᛚᛇᛠᚹ•ᚾᚫᚹᚷ.ᚩᚻᚪᛏᚾᛂ•ᚣᛝᛏᛡᛝ•ᚢ•ᚩᚠᚣ•ᛗᚢᛒ•ᛏᚠᛈ.ᚱᚩ•ᛉᚩᛝᛒ•ᛖᛏᚩᛉ•ᚣᛗᚠᛉ•ᛖᚩᚫᚷᚣᛚ•ᚩᛇ•ᚠᛋᚫᛇᛗ•ᛡᛟᚹᚾᚩᚢᚹᛖᛁ•ᚾᚦᚫᛠᚪ•ᛠᛚ•ᚹ•ᛡᚩ•ᚢᚦᛗ•ᛝᛚᚪᚠᛝ•ᛚᚠᛚᚳᛒᚢᛝᛉ•ᚣᛡᚪᚷ•ᚹᛟᚪᚻᚹᚢ•ᛖᛠᚷ•ᛁᚪᛏᛂᛗ•ᛏᛖᛁ•ᚣᛡ•ᚦᚾᚠᚦ•ᚩᛈᚻᚪ•ᚻᛋᛠ•ᛡᛉᚪᚫ•ᚠᚣᛞᛠᛇᚠᚫ•ᛏᛗ•ᚳᛡᚷ•ᚱᚢᛞ•ᛂ•ᛋᛡᛇᚩ•ᛚᛟ•ᚦᚱᚫᛒᛚᚦ•ᛖᚪᚦᛗᛚ•ᚦᛉᚪᚱ•ᛟᛖᛒᛂᚱᛂᛖᛁᛈ•ᚪᛖᛠᚠᛂᚢ•ᛞᚹᚦᚣ•ᛉᚷᚩᚳᛡ•ᛇᛗᛞᚳᛏ•ᚻᛚᚦᛝᛖᛗᚱ•ᛒᚷᛞᛉᛗᛒᛉᚳᛝᚦᚣᛞᚫᛠ•ᛋᛏᛗᛏᚻᚹ•ᛇᚳᚪᛞ•ᛠᚢᛒᛉ•ᛡᛁᛡᛚ•ᚷᛋᚦᛞ•ᚠᚢᚩᛠ•ᛚᛋᚣᛏ•ᛋᚪᛞᚫᚹᛂᛞ•ᛋᛈᛋᛂ•ᚪᛖᛁᛇᛒᛟ•ᛏᛂ•ᚠᚩᛚᛞ•ᚾᚷᚳ•ᛚᚷᛗ•ᛠᚦᚢ•ᛟᚻᚾᛟᚣᛡ.ᛇᚻᚣᚪᛈ•ᚾᛋ.ᛞᚫᛠᚳᛉᛂ•ᚦᚹᛋᚱᚦᚫᚾ•ᛡᛚᚣᚫᛋᛖ•ᛟᚣᛝᛡ•ᚦᚣᚷᛇᚱ•ᛋᛠᛏ•ᛡᚳᛉ•ᛠᚷ•ᚳᛒᛋ•ᚹᚾᚻᛖᛝᛋ•ᚩᛡᛗᛉᛝ•ᛉᚦ•ᛠᛞᚳᛒᚷᛉᚹᛝᚢ•ᛉᛞᛈ.ᛉᛡᛈᛟ•ᚾᛡᚠᛡᚢᛋ•ᛉᚪᛖᚻᚱᚣᛠᛇ•ᛒᛟ•ᚪᛝᛡ•ᚳᚱᚳᛈᚩᛏ•ᚻᚣᚫᛁᛋᚩᚦᛚ•ᛟᛚ•ᛋᚪᚢᚪᛈᚻ::ᚠᚢᛚᛗ•ᚪᛠᚣᛟᚪ:ᛚᚢᛝᚾ•ᚳᚢ•ᛒᚾᛏᚠᛝ:ᛁᚢᛁᚢ•ᛟᚫᛂᚠᚫ•ᚢᚷᛉᛇᛈᛉ•ᚣᛠᛚᚪᛉ•ᛟᛉᛡᚦᚻᛠ•ᚾᚪᚳ•ᚢᚷᚾ•ᛈᛖᚾᚦᚩᚢᛁᛡᚱ•ᛏᛁᛒᛇᚳᚠᚷ•ᚩᚦᚪ•ᛁᛈᚻᛡᛒ•ᚹᛈᚻᚱᛞᛉᛏᚢ•ᚣᛒ•ᚠᛋᛉᚢ•ᛗᛁ•ᛡᚱ•ᛝᚢᚠᚦᛝ•ᛈᛟᛒ•ᚻᚷᚻᛡᛚ•ᚩᛞᚪᚳ•ᚦᛈᛞᛋᛡᚻᛇᛚ•ᚢᛏᛋᛞ•ᚦᚢᛞᛝ•ᛚᛉᛝ•ᛏᚩᛚ•ᚪᛚ•ᚣ•ᛟᛡᛉᚣ•ᛒᚻᚫᛂᛡᛁ•ᚱᚦᛚᚠ•ᛠᚾᛝ•ᛉᛗᛒᚩᛠᛈ•ᛖᛞᚪᚫᛏᚩᛠᛖᛠᛉᚳᛠᛏ•ᚩᛞᚳᛠᚾᚳᚦᛗ•ᛞ•ᚷᛁᚳᚹᛟ•ᚪᚢᛒᚳᚫ•ᚦᚱ•ᛋᚣᚪ•ᛏᚦᛒ•ᛝᚹᛋᚱᛁᛝ•ᛒᛁᚪᚫᛚ•ᛏᚱᛡᚫᚠᛞ•ᛝᛂᚩ•ᛡᛠᛉ•ᚪᛡᚻ•ᚱᛒᛁ•ᛞᛡᛂᚪᛈᚱᛋ•ᚢᛡ•ᚻᚷ•ᛚᛟᚠ•ᚻᚷᚫᛋ.ᛈᚹᚷᚷ•ᛗᛟᚪᚾᚱ•ᚩᛟᛞ•ᚷᛟᚠᛠ•ᛡᚷᚳ•ᛉᛠᚠᛚ•ᛒᚫᛈ•ᚩᛂᛈ•ᛂᛗᛠ•ᚾ•ᛉᚪ.ᛡᛖᛋᚷᚫᚦ•ᛂᚷᛉᚩᚦᛂᚳᚣ•ᚢᛂᚦᛂᚪᚾᛏᛒ•ᚳᛈᛡᛂᛋᚫ•ᛋᛗ•ᚻᛞᛠᛉᚢᛗ•ᛏᛠᛖᚣᚠ•ᛂᛏᛋᛗᛞᛟᛁᛝᚪᛉᛖᛈ•ᛚᛇᛞᚦ•ᚪᛋᛉ•ᚳᛒᚢᛟᚳᛒᛚᚾᛟᛝᛉᚩ•ᛖᚳ•ᛝᛟᚳᛁᛒᛈᚫ•ᚣᛖᛂᛝ•ᛞᚢᚱ•ᛉᛟᚩ•ᚠᚹᚩ•ᚣᛁᚠᚢᛇ•ᛚᛏᛈᛒᛗ•ᛇᛝ•ᚢᚳᚱᛡ•ᛖᚩᛁᚣᛂᛏᛡ•ᛖᚠᛇᚠᛚ•ᛁ.ᚣᚷᚠᛝᛡᛈᚷᛒ•ᛡᚩᚷᛡ•ᛟᚾᚹᛡᛈᛟ•ᚦᛈ•ᛟᚷᛚᚦ•ᛈᛞ•ᚦᛇᛒ•ᛡᚪᛒᚪ•ᚾᛗ•ᚳᚾᛖᛡᚹᛝᛏᚱ•ᛝᚫᛚᛟᛁᛇᚣ•ᛝᛡᚾᛏ•ᚱᛁ•ᛋᚪᛖ•ᛇᚢ•ᛝᛞᛂ•ᚠᚱᛠᛗᛠᚪ•ᚫᛈ•ᛏᚠ•ᛖᛏᚷᚾᚠᛁᚠ•ᚱᚻᚱᛇᛒ.ᚻᛈᛏ•ᛇᚱᛝᛡᛒᚹᛚᛏ•ᛗᛉᚦ•ᚾᛂᚳᚫ•ᚷᛈ•ᛋᛖᚩ•ᚢᛝᚩ•ᛏᛈᛁᚣᚾᚪ•ᛏᚹ•ᚠᛗᚾᛟᚾᚳᛒ.ᛂᛉᛡ•ᛟᚪᛁᚫᛝ•ᛒ•ᛉᛏᛂᛁᛋ.ᛠ•ᚳᛖᚱᚦᚣᚩᚣ•ᛈᚫᚷ•ᛡᛂᛁᚩ•ᚱᚦᛠ•ᛇᚦᚩᛉ•ᚾᚱᚾᚫᛁᛉ•ᛁ•ᛝᚣᚫᛡᚫᛗ•ᚹᛖ•ᛇᚷᚻᛖᛗ•ᚷᚢᛞᚹ•ᛂᚻ.ᛉᚱᚢᛂᚢᚾᛈ•ᛋᚣᛂᚫ•ᛈᚳᚣᚳᛒᛡ•ᚫᛟᚪᚠ•ᛏ•ᚷᚩᛇᛟ•ᛁᚱᛗ•ᛖᛉᛟ•ᛗᛇᚫᛟᚦ•ᚱ•ᛞᛁᚢᚦᚻᛗᛡᚾ•ᛁᚦᚻᛚ.ᛏᚳ•ᚪᚦ•ᚠᚪᚫᚣᚻᛠ•ᚦᚠᛋᚠᛝᚷᚱᛈ•ᛏᛂᛉᛟ•ᚷᛚᚻ•ᚩᚪᚦᛏᚳᛁ•ᚠᚣᚢᛁᚹ•ᛟᚪᚣᛁᛠᛂᚪ•ᛟᛝᚦ•ᛟᚠᚦᚾ•ᛇᚷ•ᛠᛚᛒᚠ•ᛠᚪᛂᛇᛠᛚ•ᚱᚷᛋ•ᚹᚩᛒᛁ•ᛠᚳ•ᛁᛞᛂ•ᛖᛗᚱ•ᚷᚪᚻᛠᛚᚷᚩ•ᛉᚻ•ᛡᛝ•ᛞᚱᚹᚩᛈᛡ•ᚣᚳᚦ•ᛁᛇᚢᛁ•ᛟᚦᚠᚳᚻ•ᚩᛁ•ᛝᚾᛁᛞ•ᛏ•ᚫᚱᛝᚫᛈ•ᛠᛞᛇᛉᚳᛠᚩᛟᛖ.ᛗᛈᛒᚦᛝᛋᚢᛡ•ᚻᛡᛏ•ᛉᛇᚷᚠᛡᛡᛟᚢ•ᛡᚦᚣᛞᚪᚫᛝᛒ•ᚳᚩᚷ•ᛏᛞᚦᛁ•ᚠᛒᛖ•ᚦᛟᚳ•ᚠᚻ•ᛞᚠᚣᛋᚾᛟ•ᛠᛇᛂ•ᛖᛉ•ᚩᛈᛠᛚᚪ•ᛟᚩᚾ•ᛂᛉᛋ•ᚣᚫᚷᛖᚩᛟᚢᚱᚹᚢ•ᛟᛡᛂᛇᚢᛞᛉ•ᛒᛇᚳ•ᛝᛚᛗᛠᛗ•ᚪᚱᛡᛗᛒᚩᚹ•ᛋᛖᚾᚻᚣ•ᛈ•ᛞᛚᛞ•ᛈᛏ•ᚪᛞᛚᛉ•ᛟᚱᚾᚹ.ᛠᚠᛁ•ᛟᚾᛒ•ᛇᛟᛖᛝᚳᚠᛏᛞᛏ•ᛇᚫ•ᛝᚢ•ᛠᛡᚫᛖᛟᛞᛝᛠ•ᚠᛗᛒᛚ•ᛏᚢ•ᛈᚱᚹᛟᛇᛉ•ᚳᛟᛈᛏ•ᚢᚠᚳᛞ•ᛂᛋᛞᛈᛚ•ᚠᛝᚱᛂᚣ•ᛞᛗᛖᚣ•ᚢᛖᛝᛠᚳᛞᛈᚩᛠ•ᛏᛒᚳ•ᚷᚾᚩᛟᚾᚠ•ᚩᛁᚠᚢᛋᚾ•ᛞᚹᛠᛇᛈ•ᚱᚩᚩᛂ•ᚪᛟ•ᛇᛠᛂᛁ•ᛟᛂᛞᚢᚳᛝᚩ•ᚱᛝᛋ•ᛂᛁᛈᛉᛖ•ᛞᛁᚾᛗᛗᚳ.ᛉᚩᛁᛂᛞᚳ•ᚢᚪᛇ•ᚦᛡᛇᚻᛠᚣ•ᛠᚻ•ᚠᚩ•ᛡᛠᛋᛟᚪ•ᚹ•ᚫᚻᚩᛂᚢᚱᚩᚣ•ᛏᚫᚪᛡᚷ•ᛂᛚᛂ•ᛝᛏᛖᛒᛚᛉᚻ•ᚱᚩᚫᛇᛈᛂᛠ•ᚳᛈᛚᚣᛈ•ᚪᛠᚻᚻᛋᚫ•ᚩᛝᚹ•ᛋᛞᚠᚳᛠ•ᚩᛇᚫᚪᚩᚹᛗᚪ•ᚣᚫᚷᚫᛂᚱᚹᛞ•ᚱ•ᚦᚷᚳᚹ•ᚾᚷᛡ•ᛚᛒᚳ•ᛂᚷᚹᚹ.ᚱᛁᚠᛏ•ᚠᛚ•ᛋᛂᛚᚪᛂᚱᛏ•ᛞᚷᚫᛠᚠᛉᛞ•ᚫᚷᚻᛏ•ᛗᚣᛈ•ᛏᛒᛟᛝ•ᛂᛋᚾ•ᛝᛁᚹ•ᚦ•ᛠᛝᛞᚾᛟᚷᚫ•ᛁᛗ•ᛝᛉᚱᛞᛋᛗ•ᚠᚫᚹ•ᛟᛋ•ᚦᛞᛞᛈᛝ•ᛞᛡᚷᛒ•ᚪᛟ.ᚦᛡᛒ•ᚪᚹ•ᚾᛉᚫ•ᛚᛈᛁ•ᛒ•ᚠᚾᚠ•ᛡᚩᛏᛞᚾᛋᛖᚳᚻ•ᛖᚻ•ᚢᛟ•ᚪᛖᛗᛝ•ᛠᚫ•ᛈᚩᚪᛞ•ᚠᚫᚻ•ᚠᛏᚦᛂᛚᛂᛒ•ᛗᛇᛈ•ᛂᚢᛒ•ᚷᛁᛇ•ᛈᛉᚣ•ᛈᛟᚦᛞᚱᛠᚪᛡ•ᛝᛡᛒᛚᚻᚦᚫᛉ•ᛟᚫ•ᚪᛇ•ᛉᚳ•ᛠᚠᚫ•ᚢᚣᚦᛋ•ᚠᛝᚠᚱᚹ•ᛟᛒᛗᚷᛞᚾᛡ•ᛞᚪ•ᚻᚣᛇ•ᚱᛚ•ᛖᚣᛇᚻᛠᚩ•ᚢᚳᚱᚻ•ᛡᛟᛗᛠᛝᛂᚦ•ᛂᚢᛁᛇ•ᛂᛁ•ᛖᚷᛁ•ᚪᛇᛏ•ᛝᛡᚳᛚ•ᛇᚠᛗᚪ•ᚷᛚᛒᛋ•ᛉᛞᚫᛟᛋᛚ•ᚹᛏᛠᛗ•ᛚᚦᛗ•ᛝᚦ•ᚣᛈᚠ•ᚪᛞᛚᚪᛖᛚᚩ•ᚱᚷ•ᛚᚳᛇᛏᚷᚣᛟᛗ•,•ᚪᛁ•ᚷᛂᛒᛡᛗ•ᛞᛈᚪᚳᛠᚷᛋ•ᛏᛈ•ᚩᛋᛏᛗᚱᚣᛋᛉ•ᛁᛂᛚᛝᛚᛁ•ᛉᚢᛠᛗᛇᚢᛋᚻ•ᚳᛉᛂᚩ•ᚠᛂᚠ•ᛁᚣᛁᛟ•ᛏᚷᚱᚦ•ᛡᛒᛋᚳ•ᛇᚢᚷ•ᛚᚱ•ᛁᛗᚱ•ᛗᛝᚻᛈᚫ•ᛝᛋᚫ•ᛖᛈᛁ•ᛒᛇᚹᚫᚢᛂᚳᛒ•ᚦᛋᚹᚦᚫ•ᛡᛟᚷᛚ•ᛞᛚᚢᛟᛡ•ᚱᛞᚱᛒᛂᚳᚢᛠ•ᚩᛉᛉ•ᛝᛡᛂ•ᛁᚫᛟ•ᛖᛗᚹ•ᛖᛉᚦᛗᚪᛋᛉ•ᛞᚦ•ᛡᚢ•ᛉᛗᚫᛋᚳᛖ•ᚳᚫᛠ•ᛞᚳᚷ•ᚩᛁᛇ•ᚾᛟᚷᚣᚳᚦᚳᚦ•ᛗᚣ•ᛈᚪᛒᛈ•ᚻᚢᚻᚾᛏᚫᛒᛇᚩᛁᛈ•ᚫᚩ;ᚣ•ᛡᚣᛗᚷ•ᚠᚱᛡᛚᛏ•ᛖᛟᚩᛈᛚᚩᚷᛁᛟᛠ•ᛞᛖᚳᛗᛁᚣ•ᛈᛚ•ᛁᚹᛋᛂᚹ•ᛟᛡᚪ•ᚦᛖᚩᛂᚷᛋᛝᚣᛗᛟᚻ•ᛗᚠᚦᛉᚦᚫᛋᛈᚣᚩᚠ•ᛈᛟᛋᛖᚫᛇᛗᛚᛈᚾ•ᛡᚠᚳᚾᚩᛂᛋᛡ•ᚫᛂᚦᚪᛠ•ᛈᚻᛋᛟ•ᛗᚹ•ᚱᚣᛁᚢ•ᛉᚹᛋᚱ•ᛞᛈᚦᛈᚩ•ᛞᛂᚩ•ᚢᛈᛖᚪᚫᛉᚫ•ᛏᚱᛟᛏᛒ•ᛠ•ᚫᚳᚾ•ᛖᛝᚦᛂᛂᚠᛚᚾᚩᛒ•ᛉᚷ•ᚪᚩᛚ•ᚪᚢ•ᛞᚻᚳᚹᛚᛡᛞᛇ•ᛟᚩᛡᛚᚳ•ᛡᚳᛉ•ᛝᛠᛝᚷᛝᛞᛂᛏ•ᛠᛈ•ᚹᛈᛗ•ᛈᚱ•ᚫᛏᛖᚢᛝᚫᛡ•ᚾᛁᛠᚻᚦᚣᛠ•ᚫ•ᚩᛉᛋᚩ•ᛂᚠᛏᚷ•ᚹᛁᚪᛁᚩᛁ•ᛝᛠ•ᚾ•ᚷᛗᚹᚦᛖ.ᚷᛟᚪᚹᛞᚻᚢ•ᛡᚹ•ᚣᚷᛉᛒᚪᚾᛝᛡᛂᛡ•ᚠᚷᛈᚦᚠᚦ•ᛁᛈᚪᛝᛋᛞᛟᚩᛝᛗ•ᛁᚷ•ᛂᚷ•ᚳᚩᚦᛖᚦᛂ•ᚣᚠ•ᚦᚳᛂᛡᛖᚢ•ᛉᛂᚳᚻᛂᚱᛂ•ᚪᚻᚾᚦ•ᛚᚷ•ᚱᚦ.ᛒᚪᚩᛖᚢᛡᛂᚹᛏᚱᚹᛟ•ᚦᚳᛗᚦᚠᚫᚻ•ᛡᚠᛠᚣᚪᚦᛚᛏᛒᚢᛝ•ᛖᛋᛗᚱ•ᚪᚹᛒ•ᚹᛒᛗᚱᚾᛗᚻᛗᛁᚾᚪᛞ•'ᛡᛖᚩ•ᚾᚹᛡ•ᚢᛂᚦᛠ•ᛚᚳᚷᛚᛇ•ᛟᛠᛠᚪ'.ᛇᛉᚣᚪ•ᚷᛏᚩ•ᛖᚹᛒᛈᚷᛝᛒ.ᛡᚦᚠᛋᚾ•ᛒᚦᚠ•ᛇᛝᛠ•ᚠᚾᛉ:ᚢᚪ•ᚹᛝᚷᛉᛞᚷ•ᛁᛒᛁ•ᛇᛏᛒᛁᚣ:ᛠᚷᛋᚫᛈᚹᛗᛠ•ᛇᛂᛇ•ᚹᚻᛁ•ᚷᛠᛒᚢᚣᚻᚣ•ᛝᚹᚢᚱᛋ•ᚩᛡᚠᛡᛠ•ᛞᛟᚦᛗᚳᚾᛉ•ᛞᚦᛖᚱᛇᚳ•ᚪᛂᛋᛟ•ᚢᚹᚱᛏ•ᛋᛖᛋᛏ•ᚣᚱᛠᚫᚾᛞ•ᛈᛒᛡᛋᚢᛞᛖᚣᚦ•ᛚᚹᛟᛋ•ᚷᛚᛂ•ᚫᛖᚩᚳᚦᚹᛗ•ᚢᚩᚷ•ᚠᚪᚩᛡᛝᛒᛠᚦᚳᚪ•ᚱᛡᛏ•ᛟᚹᚠᚣᛝᚢᚣᛁ•ᛚᛏᚫᚫ•ᚪ•ᚱᛈᚠᛗᚹᚩᛞ•ᛠᛒᛈ•ᛝᛟ•ᚾᚷᛗ•ᛡᛖᚩ•ᚾᛚᛉᛝ•ᛁᛡᚫᛗ•ᚻᛖᚹᛗ•ᛝᛈᛇᛗᛡᛂ•ᚫᚩᛡ•ᚠᚣᛉᛟᚫᚦ•ᚫᛒᚩ•ᚪᚦᛂᚱᛂᚾᚦ•ᛡᚠᚪᛏᚾᚻ•ᚷᚢ•ᛞ•ᚳᚦᚢᚱᚢᛟ•ᛞᚻᚱ•ᚷᚹᛏᛈᛖᚠ•ᚪᚻᛠᚦᛞᚱᚠ•ᛖᛂᚫ•ᚾᚳᚻᚹ•ᛇᛡᛈᛠᚹ•ᛗᛚ•ᚹᛟᚹᛠ•ᚪᚾᚪ•ᚳᚪ•ᚷᛚᚦᛒᚩᚹᚢ•ᚷᛚᚠᛋᚻ•ᚾᛉᛝᛗ•ᛖᚦᚢᛝᛡ•ᛈᚣᚢ•ᛉᚷᚷ•ᚹᛞᛁᛋ•ᚦᛡᛡᛈᚳᚪᚩ•ᚢᛗᚢᛉᚩᚣᚻᛏ•ᚩᚫᛗᚢ•ᚩᚾᛏᛠᛒᛟᛒᚠᛁᛈ•ᛚᛋᛝᚫᚳ•ᚫᛟᛏ•ᚢᚩᛉᚾᛡᛋᚠᛖ•ᛉᚱ•ᛗᚩᚩᚫ•ᚠᚢᚦᛖᛞᚾᚣ•ᛡᛋ•ᛋᚱᛚᛟ•ᚢᚻ.ᚢᚾᛈ•ᛁᚻ•ᛖᛉ•ᚦᛞᛗ•ᛈᛟᚠ•ᛈᚠᛝᚫᛝᛋ•ᛟᛂᚹ•ᛠᛒᚣ•ᛟᚹᛞ.ᚠᚣᛂᛁᛏᛉᛚ•ᚩᚦᛝ•ᚠᚪᛋᛡᛁᚻᛒᚱ•ᚪᚢᚣ•ᚫᚢ•ᛟᛠᚪᚣ•ᛖᛟᚫ•ᛖᛈᚠᛒ•ᛈᛂᛁ.ᛋᛝᛒ•ᚱᚦᚳᛇ•ᛚᛁᚢᛈᛏᚳᛒᛉ•ᛖᚪᚣᚠᛗᚳᚣᚱ•ᚻᚹᛏᚾᛡᛉᚫᚦᛟ•ᚳᚹ•ᛠᚠ•ᛏᛠ•ᛝᚩᚻ•ᛡᛠᛒᛋᚻᛟ•ᚫᛁ•ᛠᛏᛁᛋ•ᛏᚫᚻᚱ•ᚻᛂᛋᛡᚹᚾᚾᛡᚹᛚ•ᚢᛖ•ᛏ•ᚱᛝᚳᚣ•ᚪᛉᛇᛝᛋᛖᛇᛁᚻᚾ•ᚷ•ᚹᛉᚳᛉᚣ•ᛋᛈᚳᛟᚱ•ᛒᚣᛂᛝᛖᛁ•ᚾᚷᚪ•ᚣᚷ•ᛚᛒ•ᚢᛂᚩ•ᛝᛉᛉᚪᛖ•ᛒᚦᛉᛡᚱ.ᛏᚷᚹᛂᛋᛁᚠ•ᛠᛁᛡᚦᛝᚾᛖᚾᚠᚩᛗᛖᚣᚪ•ᚳᛖᚳᚹᚪᚫᚹ•ᛇᚢᚦᚻᛉᚢᚾ•ᛠᛚᚢᚾᚦᛈᛋᚢᛈᚱ•ᛞᚫᛟᚱᛡᚫᚪᚢ•ᚢᛗᛚᚦᛠ•ᛚᛝᛈᚣ•ᚩᛋᛟᚪᚱᛗᚦᛟᛈ•ᛚᛋ•ᛏᛁᚠᛋᛖᚹᛝ•ᛗᛞᚩ•ᛠᚫᛡᛒᛏᚩᛋ•ᛖᛏᚪᚠ•ᚫᛒ•ᛚᚾ•ᛋᚪᛉᛟ•ᚾᛚᚹᛖ•ᚩᛚᛁᛂᛏ•ᛒᚪᚠᛉᛏ•ᚩᛟᛂ•ᚾᚷᛋ•ᚷᛚᚷᛠ•ᛒᚷᛖᚩᚪᚩᛖᛞ•ᚷᛇᛗ•ᚳᚱᚷ•ᛈᛞᚩᚠᚹᛇ•ᛠᛞᚣᛝ•ᚾᛁᚠᛈᛚ.ᛖᛟ•ᚢᚳᛗ•ᛚᚫᛏᛉᛂᚱᛉ•ᛁᛠᚷᛚ•ᚷᚳᛋᚩᛝ•ᚫᚦ•ᛗᚻᛟᚠ•ᚱᛋᚳᚦ•ᚣᚩ•ᛒᛁᚫᚻᛖᚢᛏᛚᛚ•ᛇᚷᛟᚣ•ᛒᚾᚦᚻ•ᛠᛖᛂᛒᚾᛁᛚᛠᚱ•ᛂᚠᚳᛋᛝᚳᛈ•ᚷᚻᛋᛗ•ᛇᛞᛇ•ᚣ•ᛡᛖᛏᛠᚢᛡ•ᚩᚾᛠᚩ•ᛂᚣᛇᛉᛠᚪᛡ•ᚾᛞᛝᚻ•ᛈᛠᚻᛡᚢ•ᛝᚻᚦᛈ•ᛉᚢ•ᛠᚣᛈᛟᚦᛋᚣᛈ•ᚠᛏ•ᛒᛁᛟᚪᚷᛚ•ᛠᚻ•ᛝᛁᛡᛚᛝᚾᛞᚪᛈᚷ•ᚾᛏᚦᛋᛒ•ᛋᛋᛠ•ᚷᚳ•ᛠᛗᚢ•ᛖᛉᛒᚷᚫᚠᚩᛁᛉ.ᚠᚪ•ᛠᚱᛇ•ᚩᛁᛞᛋᛚᚦᛖᛒᛇ•ᛟᚷᚣᚷᚾᚷ•ᚦᚠᚳᛗ•ᚩᛖᛖ•ᚩᚠᛒᚻᛝ•ᚳᛁᛂᚪᚾᚩᚪ•ᛈᚻᚱᛗ•ᚱᛗᛟ•ᚦᚷᛂ•ᛒᚱᚦᚪᛠ•ᛉᛖᛡᛞᚦ•ᚱᛝᛂᛒ•ᚾᛏᚣ•ᛏᛋᛒᚾᚫ•ᚢᛖᛁᚩᛡ•ᛂᛇᚢᚦᛚᚳᛖ•ᛚᛁ•ᛒᚢᚠᚪᚱᛠ•ᛗᛒ•ᛞᛉᛗ•ᚢᛠᛏᚣ•ᚪᛂᛈᚢᛈᛠᚣᚷ•ᛗᛡᛗᚢᚪᛗᛝ•ᚣᛡ.ᚪᛖᛏ•ᛖᛋᚪᛟ•ᚳᚻᛁᛋᚠᛁᚾ•ᛈᛟᛝ•ᛇᚦᚣᛏᚫᛉ•ᛖᛟᛏ•ᛞᛡᛚᛖᛈᛏᚪ•ᛏᚠᚱᚾ•ᚪᛠᚱ•ᛠᚳ•ᚾᚻᚹᛒᛇᛋ•ᛁᚻᚣᛋᚹᚩᛉᚹ•ᚩᛝᚢ•ᚻᛝᛟ•ᛏᛚᚠ•ᛂᚷᛏᛝᛂᛝ:ᛗᛈᚣ•ᛚᛋᚩᚪᚫᚻᛚᛖᛇᛁᛗᛚ•ᛚᛋᚳᛈ:ᚾᚻᚷᚢᛡᚻᚢ•ᛒᚠ•ᛞᛂᚢ•ᛒᛖᛁ•ᚫᚠ•ᛈ•ᚫᛈᚦ•ᚱᛗᛚᚳ•ᛒᚷᚣᛗᛠᛒᚫ•ᚾᚦ•ᛗᚠᛡᛠᚳᛒᚷᚫᚠ•ᛖᛂᚱᚩ•ᛈᛒ•ᚠᛒᚩ•ᛇᚱᛠᚱ•ᛠᚷᛖᛚ•ᛇᚱᚾᛋᚩᚩᚳᚪᛖᚣᛖᛖ•ᛏᚱ•ᚢᚣ•ᛟᛂᛉ•ᛠᚷᛝ•ᚣᛏᛝᚾ•ᚪᛏᛋ•ᛝᚪᛂ•ᚠᛚᛋᚢ•ᚹᛠᛈᛁᛏ•ᛁᚾ•ᚱᚱᛝᛗ•ᚣᛗᚠᛁᚫᛁᚪ•ᚢᛟᛒᚹ•ᛗᛁᚻᚣᚹᛞᛚ.ᛟᛏᛞ•ᛟᚳᛒ•ᛡᛒ•ᚪᛏ•ᚹᛏᛈ•ᚹᛠᚩᚱᚩᛖ•ᚣᛚᛋ.ᚢᛡᚱᚠᛂᛇᚱᛡᚦᛖᚢᛏ•ᛝᚫ•ᚾᚪᛠᚩᚪᚾᚪᚦᚷᚩ•ᚫᛉᛒᛏᛖᛠᛗᚷᚱᛗ•ᚣᛝᚠᛒ•ᛞᛟᛞᚪ•ᛠᚱᚳᛁᛈᛞᚠᛗᛝᚻ•ᛋᚩ•ᛞᛈᛉᚾ•ᛟᚱᛡᚾᚳᚳᛏ•ᚾᛈᚠᛈᚳ•ᛂᚦᛒᛁᚹ•ᛞᚹᛝᛠᛡᚹᛚ•ᚹᛂᚾᚪᛟ•ᛏᛞᛉᚣᛖᚱᛞ•ᚱᛏᛇᛁᚳᛈ•ᛝ•ᚦᛟᚷᛂᚦ•ᚣᛋ•ᛠᚻ•ᚠᛒᛚ•ᛁᚫᛚᛞᛉᚪ•ᛁᚹᚷ•ᛒᚩᚹᚾᛠ•ᛋᛖᛗᛒᛋ•ᚳᚹᚦᛟᚠᚻᚫ•ᛞᚢᛁᛒᛞ•ᛇᛝᛈᚠᛁ•ᛟᚢᚣᛏ•ᚻᚱᛖᚾᚳᛈᛡᛈᛞᛂ•ᛁᛏᛗᛋᚫᛉᚩᚣ•ᚪᛂᛗᛡᛖ•ᛇᛂᚠᛗᚱ.ᛞᛟᚪᛒᛞᚻ•ᚾᛈᚪ•ᛇᚱᚻᚾᛝᛠᚠᚾᚠ•ᚩᛗᛋᚾ•ᛠᚪᛁᚢᛚ•ᚪᚫ•ᛂᛉᛡᚠ•ᛁᛖᛈᛠᚻ•ᚠᛇᚩᚹ•ᛠᛂᛇᛁᛠᚫ•ᛂᛒ•ᛋ•ᚠᛖᚷ•ᛋᛁ•ᛟᛗᛒᛁᛝᛏᚪᚢᛁᚦ•ᚩᛝᛗᚠ•ᚹᛟᛒᛟᛡ•ᚠᚣᛝᚩᛠ•ᚳᛚᛈᚱ•ᛞᛂᚩᛝᛂ•ᚪᛖᛗᛈᚾ•ᚠᛠᚷᛞᛒ•ᚩᛉᚷᚾᚣᚷ•ᛠᛈᛂᛞᚾᛟᚩᚢᚾᚹᛗ.ᛂ•ᚢᚷᛠ•ᛗ•ᛇᚪ.ᚻᚦᛡ•ᛝᛈᛞᛒ•ᚳᛉᚳ•ᛠᛉ•ᛟᚣ•ᛒᚦᛁᛂᛚᛡᛝᛡ•ᚹᛂᚫ•ᛋᛗᚪᛡᛠᛇᛝᛏ•ᚦᛞᚷ•ᚢᛏᛚᛏᚣ•ᚢᛝ•ᚷᛟᚪᛏ•ᛂᚦᚣ•ᚫᚻᚪ•ᛒᛝ•ᚦᚢᚱᚪᚾᛞ•ᛁᛝᚫ•ᛚᚫᚷ•ᚹᛁᛒᚣ•ᚾᚫᚠ•ᛚᛋᛒ•ᛈᛟᚪᛟᛞᚷᛟᚣᛉᚷᛚ•ᛋᛠᛁ.ᚳᛟᛁᚦᛈᚹᛉ•ᛖᚢ•ᛟᛂᛝᛋᚢᛝ•ᚳᛡᛠ.ᛚᛇ•ᛚᚷᚢᛁᛏᛒᛋ•ᛞᛁ•ᚠᚠᚷᚠ•ᚦᛂᚳ•ᚫᛟ•ᛁᛗᛡᛁᛇᚦ•ᚩ•ᚢᛈᛒ•ᚻᛋ•ᛂᚣᛂᛖ.ᛒᛇᛇᚱ•ᚹᛂᛏᛡ•ᚳᚪᚫ.ᚩᛈᚱ•ᛡᚾᛗᛁᛝ•ᚻᚹᚦ•ᛡᚦᚻᚦ•ᛉᚫᚫᛋᚳᛡᚾᛇ•ᛟᛉᚢ•ᚱᛂᛖ•ᛚᚾᛞ•ᛗ•ᛏᚱᛟᚦ•ᛁᛝᛡᛒ•ᚳᚩᚹᛟ•ᛏᛗᛋᚱᚷ•ᚱᛚᛞᛚ•ᚩᚣ•ᛞᚳᚪᛖᛞᚠᚳ•ᛇᛖᛉᛚᚫ•ᛖᚩᛁᛋ•ᛡᛁᛟᛋᚪᛒᛗ•ᛗᚣᚹᛂ•ᛖᚫᛝᛚ•ᛂᚱᛇ•ᛈᛚᚩᚻ•ᚪᛞ•ᛡᛂ•ᛞᚠᚹᛞᛂᚳ•ᚾᚦᛉ•ᛂᚻ•ᚷᛚ•ᚠᛖᚦ•ᛇᚻ•ᛝᛖᛒᛚᛞᛁᛗᚠ•ᚹᛒᛗᛟᛁᛖᛁᛠ•ᛈᚻᛝᛖᛞᛟᚩᚻᛂ•ᚹᚩᚾᛂᛈᛗ•ᛖᚳ•ᛖᛇ•ᚷᚻᛗᛞᚪᛈᛖ•ᛗ•ᛉᚫᛒᛇᚱ•ᛖᚣᛟᚣ•ᚱᛠᛈᚢᛠ•ᚣᛖᚪᚻ•ᚩᛉᛠᚢᚻᛡᛟ•ᚷᚫᚩᛒᛉ•ᚫᚱᛞᛋᚩᚱ•ᚷᛠ•ᛉᚻᛁ•ᚷᚳᛞᛠᛡᚳ•ᛂᛠᛉᛇᚻᛋᚹ•ᛝᛡᚷᛖᛡᚣ•ᛠᚩᚷ•ᚱᚦᚠᛟᚩᚦ•ᚦᛁᛏᚱ•ᛇᛉᛇ•ᚢᚷᛠ•ᛟᛏ•ᚩᚠᛚ•ᛟᛝᛈ•ᚱᛡᚪᚩᛏ•ᚩᛠᚷᚫᛗ•ᛈᛋᚱ•ᛖᚦᚠ•ᛞᚹᚾᛚ•ᛝᚩᛇᛂ•ᚳᛚᚢᚹᛏ•ᚩᛖᛏᚠᚪᛚ•ᛟᛇᛟ•ᛠᚱᛇ•ᚢᚪᚦᛈᛟᛡᛉ.ᛡᛒᚱᛒᚠᚢᛚᚢᛟ•ᛒᛇᛒ•ᛉᚦᚹ•ᛝᚣᛖ•ᚳᚫᚣᛟ•ᚹᛁᛝᚫᛏ•ᚫᛇᛈᛡᛟᚠ•ᛚ•ᛝᚠᛡ.ᛞᚪᛚᛈ•ᛋᛁ•ᚢᚣᚪᛚᛠᛝᚹ•ᚪᛏᛈᚳᚣ•ᛝᚫᚻᛗᛞᚷᛚ.ᛠᛉᛒ•ᛇᛡᛋᛖ•ᚣᛁᛚ•ᚣᛠᚣ•ᚻ.ᚣᛉᚾᛏᚫᛉᛋᚦᚪᚹᛗ•ᚪᚱ•ᚪᚩᚻ.ᛗᛖᚫᛞᛠᛁᛗ•ᛒᛟᚾᚳᚩᚱᛉ•ᛋᚹᚫ•ᚻᛖ•ᛋᚠᚾ•ᚢᚦᛟᚷᛖᚪᛟᛇᛇ•ᚦᚳᛒᛝᛏᛉᛡᛞ•ᛋᛡ•ᚩᚠ.ᛈᛖᛞᛋᛁ•ᛚᛁᚻᚾᛝᚱ•ᚻᛈ•ᛇᚢᚫᛞ•ᛚᚻᛉᚳᛈ•ᛁᛗᛉᚳ.ᛂᚫᚾᛞᛋ•ᛏᛚᛡᚩᛋᛗ•ᛚᛞᚾ•ᛈᚫᛏᚷᛈ•ᚫᚦᛂᛗ•ᛒᚻᚩᚻᛁᚷᚻᚳ•ᛚᚹᛋᚱᛇᛗᛏ•ᛂᚳᛁ•ᛠᚦᛞ•ᛏᛚ•ᚱᛖᛠᛒᚪ•ᛒᚠᛒ•ᛁᛒᛡᛇᛏᚣ•ᛏᛖᚣᚳᚱᛋᚠ•ᛁᚦᚪᛉ•ᚪᚣᚫᛠ•ᛂ•ᛈᛗ•ᚠᛋ•ᚪᛒᚱ.ᛉᚣᚻ•ᚦᚩ•ᛇᛞᚢ.ᚠᛁ•ᚻᚩᚫᚠᚣᚷᚱᚪᛂ•ᛏᛉᛇ•ᛖᛠᛞ•ᛏᚠᚢᛝ•ᚫᛂᛖᛈᚳᛒᚦᚢᛝ•ᛡᛒᚹᚱ•ᛖᚾᛈᛇᚣᛇ•ᛉᚱᚹ•ᛒᛡᛞ•ᛖᚱᚩᚻᚣᛠᛈᚦ•ᛗᛁᚷᛚ•ᚹᛉᚫ.ᚠᛞᚾ•ᛂᛟ•ᚻᛚᛡ•ᛗᛖᚷ•ᛟᛁᛡ•ᚻᛟᚱᛇᚹᚣᚠ•ᛈ•ᛂᚷᚦ•ᚪᛒᛝ•ᛈᛒᚪᛖ•ᚢᚹᚻᚩᛒᛋᛉ•ᚹᛞ.ᚦᛇᚱᛖ•ᛂᚾᛞᛝᚹᚪ•ᚻᛖᚹ•ᛟᛡᛂᛡᛟᛝᛂᛉᛚᛂ•ᛞᛉᛟᛈ•ᚱᚪᛁᛏᚷᛉᛝᛇ•ᛠᛗᚩᛚ•ᚦᚫᚹ•ᚫᚢᛈᛡᚳ•ᚹᛝᚻᚹᛒᛗᛋᛟᛖᛁᛡ•ᛟᚹᚦᚻᛒ•ᛡᚱᛏᚦᚠ•ᚠᚩᚦ.ᚻᚩᛗᛖᛉᚹᛞᛋᛚᚠᛞ•ᛝᛒᛇᛡᛚᚪ•ᚹᛞᚾᚫᛉᛏᚣᛗᚷ•ᚦᚹᛉᛡᚦ•ᚹᛒᛋᚱᛉᛡᛉᚪ•ᚢᛒᚻᛠ•ᚹᛝᚢᚻᛇᛝᛡᛠᛂ•ᛋᛈᚦᛏ•ᛟᛝᚩᛗᛒᚢᛞᛋ•ᛒᛂ•ᛠᚱᛟ•ᛖᚾ•ᚾᚹᚷᚢᛚᚪᚩᚣ•ᚢᛏᚠᛂᛏ•ᚪᚷᛒᛇ:ᛞᛇ•ᛉᚳᚠᛁᚪᚹᚻᚷ:ᛇᛟ•ᚠᛏᛖᛟᛠᚪᛡᛋᚷ•ᚣᛠᚾᚦᚫᚱ•ᚩᛡᛗ•ᚹᛉᛗ•ᚣᛞᛒᛏᚱ•ᚢᛂᚻ•ᚫᛟ•ᛡᛝᚹᚻᛋᚠᛡ•ᛚᚦᛏ•ᛁᚹᛏ•ᚩᚢᚾᚹᛗᛚ•ᛋᚦᛠᚹᛂ•ᚪᛂᚫᚷᚣᛗᚹᛞ•ᛈᛡ•ᛖᛂᚹ•ᛖᚢ•ᚻᚹ•ᛝᛁ•ᛋᚫᚷ•ᛂᛚ:ᛝᚦᛇ•ᛁᚠᚳᛟᛇ:ᛞᛒᚣᛡᚣᚢ•ᚣᚾᚦᚱᛖᛗᛁ•ᛇᛞᚱᚹ•ᛉᛒᚻ•ᚳᛂᛡᚪ•ᚾᚹ•ᚾᛗ•ᚠᛇᛁ•ᛇᚪ•ᚩᛋᛒᛟ•ᛏᛂ•ᛈ•ᛖᛈᛂᚩᚹᚢᛠᛝᚹ•ᛗᚳᚩᛏᛏᚠᚢᛂ•ᛞᛠᛉᚩ•ᛉᚦᚷᛞ•ᛒᚩᛏᛚᛇᛁᛒᛡᚪ•ᛖᚠᛠᚢᛖ•ᛈᛋᚹᛞᛞ•ᛋᛡ•ᚹᚦᛞᛋ•ᛝᛂ•ᛚᚷᚢᛡ•ᚾᛉᚠ•ᚱᚪᚣᛗᚠᚦᚻ•ᚱᚪᚱ•ᚫᚪᚷᛟᛞ•ᛒᛗᛒ•ᚾᚻ•ᛇᛞ•ᚻᛗᛚᛁ.ᛠᚾᛁ•ᚫᛖᚢ.ᛏᚦᛇᛋᛈᚻ•ᚻᛇᚳᛠᚫ•ᛞᛚᛋᛝ•ᛁᚹ•ᚪᚳᚩᛏᛇᛝᚷ•ᚳᚦᛋᛠᚠᚢᛝᛚᚻ•ᚹᚩᛇᚪᛈᚷ•ᛇᛗᛚᛂᛋᛏ•ᛚᚳᛈ•ᚾᛋᛝ•ᚳᚪᚳ•ᚾᛉ•ᚾᚢᛉᚫᛗᛏᛞᛏᚫ•ᛟᛗᛋᛉ•ᛏᚣᛉ•ᛇᛠᚷ•ᚻᛒᚾᚷᛇᚢᛟ•ᛂᚦᛉᚩ•ᚾᚪ•ᛞ•ᚩᛈ•ᛠᛚᛋᛏ•ᛒᚷᛁᚢᛟᛖᛁ•ᛂᚦᛖᚻᚹ•ᛂᚫᛂᚾᚻᛉᚹ•ᛒᚪᛋ•ᚠᚱᚱᛁᛉᚢᚦᚻ•ᚢᛗᚪ•ᛞᛝᛠᚪ•ᚫᛉᛖᚾᚹ•ᛟ.ᛝᛞᚾ•ᛈᚫᚳᛡ•ᛈᚠᛉᚩ•ᛒᚷᛗᚫ•ᛚᚻᛞᚣᛖᛉᛒ•ᛂᚹᛇ•ᛈᚩᛁᚦᚠ•ᚷᚾᛈᛞᛝᛏᛖᚪ•ᛂᛋᛠ•ᛈᛝᚢ•ᛒᚷᚳᛉ•ᚪᚢᛈᛚ•ᛂᚱᚷᚣᚪ.ᚪᚠ•ᛗᛝᚣᚳᛟ•ᚹᚣᚷᛈ•ᛗᛖᚩᚹᚢ•ᛟᛞᛋᚱ•ᚣᛞᛋᚳᛡᛉ•ᚻᚦᚹᛚᛞᛠᚩᛞᛠᚢᛟᛖ.ᛠᚹ•ᛉᚻᛡᚹᛞ•ᚪᛗ•ᚠᚦᛈ•ᛝᛏᚳᚪ•ᛠᚣᚷ•ᚳᚦᛖᚾᚢᛁᚫᛁᚢᛡ•ᚹᛚᚳ•ᚻᛈ•ᛞᛂᚳ•ᛗᛒ•ᛗᚪᛂ•ᚩᚪᛞᛁ•ᚩᚱᛟᚠᛖᚣᛟᛁ.ᛇᛟ•ᛁᛈᚣᛚᚪᛡ•ᚳᛏᛠᛋᛖᛒᛝ•ᚫᛟᚫᛞᛖᛞᚣᛡ•ᛠᚪᛖᚦᛚᚫ•ᚳᛋᚪᚩᚷᚹᛚ.ᛈᛖ;ᛏ•ᛂᛉᛝᛚ•ᛏᛉᚩᚣᛝᚠᚩᚣ•ᛁᚻ•ᛟᚫᚷᛂᛝᛡᚾᛗᚣᛟᛡ•ᛝᚷᛖᛉ•ᛟᛉᛈᛚᛋᛉᛠ•ᛚᛡ•ᚱᚪᛞ•ᛠᚷ•ᚱ•ᚳᛇᚻ•ᛗᚪᛟᚷ•ᛞᚪᛋᛡᚻ•ᛈᚷᛖᚳᛟᚱᛟᚢ•ᛁᚫᛟᚦ•ᛂᚱᛡ•ᚱᛖᚦᚣᛏᛝᛡᚩᛒ•ᛏᚦᚳ•ᛉᚳ•ᛋᚪᚫ•ᛗᚠᛂᚱᛖ•ᛡᛇᛁᛇᛟᛉᚳᚹᚪᛖ•ᛋᚢᛉ•ᛋᛟᛚ•ᛂᚾ•ᛈᛇᛒ•ᚦᚦ•ᛁᚫᛚᛋᛝᛂᛂᛡ•ᛟᚻᛇᚢᛚ•ᛁᚱ•ᛡᚻᛚᛏᚹᛉᛇ•ᚱᛏᛠ•ᛁᚫᛚᛗ•ᛁᚱᚷᛏᛠ•ᛇᛟᚻᛟᚳᛋᛏᚾᚩ•ᛁᚱᚷ•ᚹ•ᛞᚢᚣᛚᛁᛗᛒᚢ•ᛚᚱ•ᛏᛁᚢ•ᚷᚳᚠᛇ•ᛚᛇᚣᛏ•ᛏᚫᚢ•ᚫᛠᛇᚣᚾ•ᚢᚹᛝᚻ•ᚷᚣᚱ•ᚩᛁ•ᛚᚾᛉ•ᚾᚩᛈ•ᚠᛠᚫᚫᚩ•ᛉᚾᛋᛟᚫᛚ•ᚾᚫ•ᚦᚢᛠᚣᚫ•ᛈᛁᛇᚢᚱᛂ•ᛈᛟᛂᚪᛝᛈᚦᛈᚪᛝ•ᚣᛗᛟ•ᛉᛒᚢᛏᛇᛗᛈᚫᚣ•ᛉᚫᚣᚱᚫᚣᚠᚠᛗᛡ•ᛉᛖ•ᚱᚢᛏᚷᚢᚣᚱ•ᛡᚢᚩᛇᛁ•ᛂᚠᛈᛂᛞ•ᛁᚦᚩᚻᛡᚷᚻ:1ᛚᚦᛇᛟ•ᚪᚫᛠ•ᛗᛉᚻᚳᛉᚪᛏᚦ•ᚫᛉ•ᚩᛋᚳᛞᛏ•ᚣᚹᚾ•ᛟᛏᛉ•ᚹᛁᛟᛂᚠᛁᚩ•ᛁᚱᛋ•ᛉᚾᛗᚪᛡ•ᚱᛈᛋᛞ•ᛁᛟ•ᚻᛖᛏᚢᚹ•ᛠᛟᛞᛟᛂᛁᛝᛡ•ᛂᚱᛞᛗᛒ•ᚩᚳᚩ•ᚦᛟᚱᚢᛚ•ᚢᚦᛋᚢᛞᛚ•ᚷᛁᚣᛝᚩᛟ•ᛁᛖᚣ•ᛖᚠ•ᛇᛝᛒᛚᛁᚢᚣᚠᛟᚾᛟ•ᛒᛟᚷᛂᚪᚾᛗᚫ•ᚣᚦᚠ•ᛁᛒᛝᛈᚾᛁᚱᚷ•ᛂᛇᚫ•ᚻᚪ•ᚱᛉᛉ•ᚩᛚᚾᚫ•ᛞᚣᛒᚾᚪ.2ᚾᚣᛖᛉ•ᚾᚢᛉᛁ•ᛝᛏᛈᚹᛋᚣ•ᛏᛠᛈᛉ•ᚪᛁᛂᛋᚱᚪᛏᛋᛝᛏ•ᚳᚷᚳᚻ•ᛖᛟᚱᚪᛡᚻᚳ•ᛝᛒᛖᚱᛠᚪ•ᛚᛟᛖᛚᚪ•ᚦᛋ•ᚳᚹᚱᚹ•ᚩᚻᚣ•ᚢᛝᚩ•ᛈᛚᛁᛏᚪ•ᚠᛋᛝᛞ•ᚳᚪᚱᛒ•ᚹᛈ•ᚾᚩᚦᚳᚦᚾᛗᚩᛖ•ᚣᛇᚾ•ᚠᛒ3ᛞᚢᛈ•ᚹᚾᛖᚪ•ᚱᛚᛁᚹ•ᚫᛉ•ᛝᚠᛞᚪᚠ•ᛒᛂᛉ•ᛞᛂᛝᚣᛇᚪ•ᚫᛂ•ᛝᛈᚪ•ᚢᛠ•ᛇᛏᚱ•ᛖ•ᚫᛗ•ᚫᛠᚻ•ᛁᚫᛟ•ᛠᚹᚳᛂᚦᚻ•ᛡᚩᚢ•ᚩᚦᚷᛡ•ᚻᛋᚷᚪᛁᛟᛞᚪᛂ•ᛁᚹᛡᛒ•ᛗᛝᛡᛞᚠᛒᛋᛏ•ᛒᚷᚠ•ᚷᛟᚢᚳᚫᛏᛁᛖ•ᚱᚷᛗᚣ•ᚪᚷᚹ.4ᛝᛂᛋᛂᛗᚱᛗ•ᚾᛒᛋᛗᛉᛞᚻᛉᛁ•ᚣᛡᚻᚣᛠᛉᚻ•ᛞᛖ•ᚹᛖᚦ•ᚢᚳ•ᛉᛗᚪᚣᛠ•ᚹᚫᚪᚳ•ᚢᚫᚳᛇᚳᚣ•ᛡᚫᛏᛖᚳᚠ•ᛋᚻ•ᛋᚱᚢᚦ•ᛁᛋᛝᛗᛞᚫᚢᛠᚢᚪ,ᚾᛝᚳ•ᛖᛈᚹᛉ•ᚢᛉᚫ•ᚾᛈᚳᚻᚱᚣᚹᛚᛉᚱᛒ•ᛗᚫᛟᚣᚩ•ᚳᛇᛗ.5ᚻᚫᛉᚦᛒᛟ•ᛏᛟᚹᛂ•ᚫᛠᛗᚠᚫᚳᚷ•ᛇ•ᚻᚹᛗᚻᛝᚣ•ᛁᚩᛁ•ᛏᛁᛖᛡᛂ•ᛗᚣᛚ•ᚻᚱᚩᛞᛒᛡᛈᛠᛗ•ᚳᛠ•ᛖᛒᚢ•ᚷᛁᚦ•ᛟᚫ•ᛡᚻᛝᛖᚾ•ᚱᛠᛡᛋ•ᚻᛏᛝᚻᚪᚷᚩᛝᚫ•ᚹᛚᛏᚱ•ᚷᛁᚾ•ᛖᛠᛂᛡᛞᛋᚻ•ᛝᚾᚳᛋᚾᛞᛇᚾᛋᛁᚳᛡ•ᚱᛝᛚᚫᚣᛇᛚᚩ•ᚳᛞᚾ•ᛝᚷᛡ.ᛝᛂ•ᚻᛂᛚᛠᛟ•ᛂᛏᚷ•ᛚᛒᛝᚢᛏ•ᚻᚳ.:ᚫᛞᛟᚫᛟᛗ•ᛟᚫᚪᚻᚱᛗᚢ•ᚣᚢᚣ•ᛈᛗ•ᚪᛂᚫᛟᛠᛚᚠᛖᛡᚢ•ᛉᚻ•ᚪᚩᛡᛒᛠᚢᚷ•ᚻᛏᛠᚪᛞ•ᛋᚹ•ᚦ•ᚾᛋᛁᚻᛒ•ᛉᛠᛝ•ᛒᚢᛚᛟᚢᚾ•ᚢᚦᚩᛗᚪ•ᚾᛞᚫᛇ•ᚫᚣᚪᛋ•ᚣᛝᛡᛗᚷᛇᚾᛈ•ᛠᚳᚻᛝᛚ•ᚠᚷᛡ•ᛁᛡᚪᚠᛒᛈ•ᚳᛋᚦᛠᚦᚫᚱ•ᚷᛞᛚᛟ•ᚷᚱᛁᛇ•ᚣᚩᛟᚢᛝᚱᚷ•ᛗᛏᚷᛒᛈᚷ•ᛗᛏ•ᛗᚣᚹᛒᛏᛒ•ᚷᚣᛈᚷ.ᚾᚦᛇᛒᚳ•ᚷᛖᛇᛟᛚᛈ•ᚹᚾ•ᚻᚷᚱᛇᛏ•ᛈᚷᛒ•ᚹᛗᛋᚹᛟᚻ:ᛡᚳᛋ:ᛈᛞᛋᛡ•ᚪᚹᛏᚳᚹᛟ•ᛗᚹᛁᛒᛞ•ᚷᛇᚢᛚ•ᛉᛋᚫ•ᛟᚻᛚᚦᛒ•ᚣᚪᛚᛞᚦᚠ•ᚻ•ᛞᛝᚩᚢᛋᚪᚫ•ᛖᚦᛁ•ᛏᛂᛏ•ᛝᚦᚾᚳᛉᛏᛝ•ᚳᛈᛁ•ᚾᛏ•ᛒᚾᛡᚱᛒ•ᚢᛈᛋᚦᛁᚳᛈᛋᛁᚹ•ᚹᛚᚣᚾᚢ•ᛒᛁᚪᛠ•ᚹᛟᚳ•ᛠᚢᚪ•ᛚᚦᚹ•ᚠᚾᛏᚳᛡᛁ•ᛚᚩ•ᚾᛗᛂᛠ•ᚦᛟᛂ•ᚪᚦᚹ•ᛡᚾᛖᛠᛈ•ᛒᛋᛂ:ᚠᚾᛗ•ᚣᚷᛞᚫᚻ•ᚪᛈᛉᚣᚻ•ᛇᛠᚩᛖ•ᛏᛝᛠ•ᛚᛁᛏᚦᚠ•ᛗᚪᚳᛖ.ᛞᚳ•ᛏᚱᛟᚷᛠᚾᚫᛒᚢᛖᛒᚢ•ᚦᚠᛟ•ᚷᛋᛟ•ᛁᛈ•ᛟᛉᛋᛒ•ᚹᛂᛒᚣᛗᚢᛠ•ᚱᛁᚢᛟᛂᛁ•ᛗᛖᚫ•ᚱᛋᛉᛝ.'ᛠᛈᛚ•ᛞᚩᛚᛁᛉᛠᛝᛖᚱ'•ᚾᛈᛖᚹᛡ•ᚾᛂᛏᚣ.ᛋᚩᛋᛏᛝ•ᚢᚾᛇᚪ•ᛖᛏᚪᛂᚳᚣ•ᛟᛒ•ᛚᛋ•ᛒᛞᛂ•ᛁᛝᚣᛖᚳ•ᛂᚻᛚᚣ•ᚷᚫᛚᛞ•ᛚᚫᛚᚦᛉ•ᛚ•ᛖᛉᚩᛉᛁᚳᚢᛗᚾᚢ•ᚩᚾᛇ•ᚻᛡᛚᛇᚩᚫᚪ•ᚩᛟᚩ•ᚣᚱ•ᛖᚠᚢ.ᛁᚻ•ᛟᛚᚾᛏ•'ᚠᛞᚱᛠᚷ•ᛈᚩᛇᚩᛗᛠᛒ•ᛂᛡ•ᛋᛗᚠ•ᛏᚠᚫᚩ•ᛟᚳᛚᛞᛡᛚ•ᚩᚳᛝᚢ•ᛈᚹᛏ•ᚷᚳᛋ•ᚢᛟᚷᚦ•ᚠᛉᚠᛏ•ᚳᛋᛉᛟ•ᚷᚠᛉᚾᛞ•ᛒᛏᛠᛡ'.ᛈᛡᛠᛁᚪ•ᛋᚣᛗᛞᚣᛋ•ᛒᛞᛂᛞ.ᚩᚾᛏᛚ•ᚳᚪᛝ•ᚱᚷᚻᚷ•ᛂᚹᚠ•ᚪᚢᛇ•ᛞᛏᛗᛂᛁ•ᛝᚫ•ᛉᛈᚳᛈᛠ•ᛟᚪᛒᛁᛁᛋ•ᛇᚷᚻᛋ•ᛇᛡᛒ•ᚠᚹᛝ•ᚫᚪᚠᚩᚣᛡᚪᚾᚻ•ᛒᚦᛟᛇᚣᛟᛁᛒ•ᛟ•ᚩᛋᚹ•ᛞᚳᚠᚪᛁ.ᛉᛏᛟᚢᚩᛟᚦᛈᛋᚩ•ᚻᛇᚦᛝ•ᛏᛠᚠᛝᛠ•ᚩᛗ•ᛏᚠᚣᛚᚣ•ᚹᛚᛞ•ᚪᛉᛠ•ᚪᛂ•ᚩᛋᛒᛚ•ᚳᛖᚾᚪᚩᚱᛏᚦ•ᚱᛒᚳᚣ•ᛠᛗᚹᛚ•ᚻᛈ•ᛇᛈᛖ•ᛚᛂᚩᛡᚪ•ᛖᛋᚫᚩ•ᛠᛉᛝᚣ•ᛖᚫᛒᛗ•ᛖᚻᚱ•ᛈᚾᛗ•ᚹᛏᛟᚣᚢ•ᚠᛉᛈᛗᚩᚷᚾ•ᛡᛇᚳᚠᛒᛈᛗ•ᛋᛇᛁ•ᛖᛈᚢᚱᛏᚳᚣ•ᛂᛚᚠ.ᚱᛚᚱᚫᛖᚻᛟ•ᛇᚣᛡ•ᚩᛉ•ᚪᛋᚣᛁᛝ•ᛉᛚᛂ;ᚳ•ᛖᚣᚢᛝᚦᛇᚱ•ᛠᛁᚫ•ᚦᚠᛟᚷᛠᛁ•ᛈᛋᛒ•ᛗᛒᛂᚠᚾᚳᛖ•ᚻᚫᚩᛂ•ᛉᛂᛚᛈᚪᛁ•ᛟᚹᚱᛁᚱᚦᛖᛉ•ᚪᚾ•ᛞᛂᚷ•ᛟᛟᚳᛏᛂᛞ•ᛉᚾᛗᚦ•ᛁᛂᚱ•ᛈᛉᚢᚫᚦᛒᚠᛂᚦ•ᚠᚪᛝᛖ•ᚹᚹᚣᛚᛇ•ᚢᚣ•ᚾᚱᚪ•ᛈᚾᚹ•ᛚᚾᛏᛚᚢᛒᚱᛝᚪᛋ•ᚫᛈ•ᛂᛚᚢᚳᚷ•ᛚᛏᛂᚹᛈ•ᚫᛗᛚ•ᛉᛚᛗᛏᛞᚠᛈᛁ.'ᚠᚳᚦᛗᛂᚹᚱᚪᛚ•ᚩᛝᚱᚢᛈᚱᛟᛡ•ᚳᛉᚱ•ᛇᛏᚦᚾ•ᚱᛇᚫᛞᛟᚻ•ᛒᚾᚣ•ᚠᛡᚪᛡᛖᚫᛞᛂᚢᛖ•ᚦᚱ•ᚩᛇᚱᛡ•ᚣᛁᛉᛇᚻᚩᛠ•ᚫᚻᛡᛝᛠᚦ•ᚾᚣ•ᚾᚠᛁᛝ'.'ᛏᚻᚹᚫ•ᛒᛇ•ᛡᚻᛉᛒ•ᛞᛝᚱᛂᚦᚻ•ᚪᚷᚣᛁᚠᚷ•ᛁᛏᛞᛠᛒᚠᚩᛈ•ᛇᛡᛟᚹᚱᚾᚩᛏ•ᛋᚹᚢ.ᛖᛡᛖᛡᚦ•ᛉᚪᚷᛈᚾ•ᛋᚱᚠᛞᛝᚻᛖᛂᛞ•ᛂᛡ•ᚱᚹ•ᚷᛝᚪᛒ•ᛂᛈᛂ•ᛏᚠᛉ•ᚪᛂ•ᛁᚠᛉᚢᚩᚣᚻᚦ•ᚻᚾᛁᛒ•ᛡᛟᛡᛋᛈᚣᛉ•ᛠᚢᛠᛚ•ᚠᛝᛗᚻ•ᚦᛒᚩ•ᛗᛚ•ᚩᛠᛋᚦᛠ•ᛇᛋᛉ•ᚠᛗᛒ•ᚫᛋᛇᚾᛡᚾ•ᚢᚫᚹ•ᛞᛠᚢᚾᛝᚠᚾᛖᚫᚻᛂ•ᛁᛖᛏᛡ•ᚷᛁᚩᚾ•ᚳᚢᚫᛗᛈᛋᚪᛡ•ᚷᛚᚣᚹᛟ'•ᚠᚢ•ᛉᚠᚫᛞᚠᛡᛂᚾ.ᚻᛋᚦᚠ•ᛏᚠᛂᚱᚹᚠᛋᚾᚹᛂᛖᛒᚢᚦ•ᚩᛇᚫᛈ•ᛡᛟ.ᚢᛁᚩᛂᚩᛇᛟᛂᛞᚩ•ᛈᚹᛞᚷᚱ•ᚠᛟ•ᛇᚷ•ᛂᛟᛇᚫᛋᚫᚣ•ᛒᛏᛞᛟ•ᛠᚻᛡᚱᛠᛠᛉᛋ•ᚠᚾᚣᚱᚠ.ᚪᚾᛡᚪᛖᚫ•ᚳᛇᛁᛝ•ᛒᛡᛞᛠᚫᛒᛠᚳᛉᚠ•ᚫᛏᛁᚱᚪᛗᚩ•ᛚᛉᛋᚪ•ᛒᚩᛈᚫᚩᛝᚻᛇᛖᛇᚫ•ᚻᛖᛇᛠ•ᚱᛗᛞ•ᚫᛇᛗ.ᚾᚾᚣᛡ•ᚱᚾᛗᛠ•ᛂᛉᛋᛂ•ᛟᛖᛒ•ᛏᚻᚾ•ᚠᚪᚠ•ᛒᚾ•ᚩᚾ•ᛖᛋᛏᛒᚹᛡ.ᚻᛏ•ᚩᛟᚩ•ᛒᚾᛖᚳᛁᚹᚣᛟ•ᛟᚩᛒ•ᛋᛖᚩ•ᚫᚻᛟᚠᚫᚷᚩᛂ•ᛟᛒᚻ•ᚳᛖᛁᛚᚫᚣᛚ•ᚢᛚᛁ•ᚾᛟᛏ•ᚫᛈᛟᛈᛝᛗ•ᚳᚢᛁ•ᚣᛋᚳᚢᛡᛇᚩ•ᚠᛖ•ᚷᛟ•ᚻᚫ•ᛝᚠ•ᛗᚠᛝᛉᛞᛁ•ᛗᛝᚣᚪᛝᚠᛉᛁᛟᚷᛚ•ᛇᚩ•ᚫᛡᛏ•ᛂᛏᛠᚢ•ᚷᚦᚣ•ᚦᚾᛟᚣᚩᛖᚻ•ᛁᛋᛖᚣᚦᚪᛡᛝᛟᛇᛚ•ᛡᛏᛝ•ᛁᛚ•ᚠᛉᛡᛠᛏ•ᚠᚾᛂᚠᚻᚳ•ᚻᛞᛠᚣᛟᛝ•ᛉᛇᚻᚩᛋᚻ.ᛇᛏᚠ•ᛚᚱᛇᚦᚪᛁᛁ•ᛒᚠᛁᛚ•ᛂᛡᛒᚣᛗᚫᚫ•ᛞᚻᛟ•ᚪᚹᛉᛚᛏᛁᚪ•ᛟᛞᛖᚾᛈᚻᚣ•ᚦᛚᛖᛋᛖᛟᚫᛖ•ᛏᚱᚪ•ᛁᚫᚹᚫ•ᛋᛈᚱ•ᛂᛡᚪᛏ•ᚫᚦ•ᚠᛠᚢᛈᚣᚫᛝ•ᚣᚾᚻᛡ•ᚳᛗᚠᚾ•ᛞᛂ•ᛖᚩ•ᛒᚷᚻᚪ•ᛖᛞᛟᚠᛇᛞᛟ•ᛈᚳᛁᚪᛒᚷᛒᛈᛟ•ᛟᛂᚠᚪᛖ•ᛂᚣᚩᛂ•ᚣ•ᚫᛋ•ᚦᛁᚫᛂᚫᛏ•ᛖᛇᚻᛟ•ᚣᚠᚹᛞᚷ.ᛡᚱᛒᚢ•ᛒᛚᚢ•ᚷᛈᛂᚪ•ᛏᛡ•ᚳᛂᚠᛡᛝᛚᚣᛒ•ᛗᚻ•ᚱᛚᛟᛠᛋᚦᛝ•ᛏᚳᛟᛉᛁ•ᛂᚱᚳᛖᛏᛂᚷ•ᛡᛈᛏᛉᚩᛁᛂᛟ•ᚷᚩᚪᚢ•ᚣᛖᚪᛋᛟᛇᚢᚪᛡ•ᛗᚱᛚᚳᚠ•ᛒᛗᛝ•ᚻᛉ•ᛠᛂᚫ•ᛉᚪᚷᚻᚣᛏᛖᛝ•ᛉᛉᛗᚾᚫᛋ•ᚱᛗᛞᛋᚳ•ᚦᛚᛟ•ᛝᛇᚢ•ᚻᚩ•ᛏ.ᚢᛁᚦᛂᚾᚠᚱᚦ•ᛋᛟᚷᛠᛗᚪ•ᛝᛚᚪᛁᛒᛠᚢᛋ•ᚩ•ᛖᛋᛝ•ᚠᛡᚢᛟᛞᛇᚪ•ᛞᛡᛒᚹᚩ•ᛂᛋ•ᛟᛝᛏᚳ•ᚻᚾᛇᛋ•ᛗᛚᚻᛞᛖᛈ•ᚫᛂᚱᚪᚢᚻᚱᚦᚱ•ᛟᛂ•ᛟᛗᚩᛟᛏ•ᚫᛇ•ᛉᛒᚳ•ᛂᛁ•ᚪᚩᛉ•ᚹᚪᚾᛈᛏᚢᚣ•ᛁᛒᚢ.ᚦᚩᛡ•ᛗᚳᚠᛉᚱᛁ•ᚪᛗᛏᛒ•ᛗᛚᛁᚦᛏᛠᛋᚾᚷᛚ•ᛏ•ᛇᛈ•ᚩᛚᛞ•ᛚᚹᚳᛂᚹᛉ•ᚪᛡᚹᛇ•ᛖᛖᚹ•ᛏᚪ•ᚣᚠᛉᚳ•ᛗᚩᚷᛞᚷ•ᛚᚳ•ᛒᚣᛋᚣᚠᛞᚣᛝ•ᛠᛇᛏᚩᚢᚫ•ᛟᛁᛒ•ᛏᚾᚫᚠ.ᛂᛟᛗᚾᛈ•ᛠᛡᚩᛏᛡᚪᚱᛞ•ᚪᛝᛈᚹᛗᛂᛟᛠᚩ•ᛚᚹᛉ•ᚱᛗ•ᚩᛏᚹᛂᚹᚾ•ᚷᚳᛠ•ᛂᚳᚢᚱ•ᛟᛇᛟᚾᚻᚫᛉ•ᚣᛚᚩ•ᚩᛡᚳᚻᛂ•ᛋᚣᚹᛁ•ᚣᚠᛋᚾᚪ•ᚷᛖᚾᛂᚪᚹᛠ•ᛞᚠᛟ•ᚢᛁ•ᛖᛇᚦ•ᚫᛞ•ᚳᛂ•ᚷᚢᚻᚣᚻᛁᛒᛉᚾ•ᚹᛝᚻᛏᛉᚫᛁᛂᚢ•ᛞᚠᛡᚫ•ᛋᛁᚹᛝᛈ•ᛗᛉᛂᛈ•ᛞᛗᛝ•ᛇᛚᛞᚣ•ᚠᚩᛞ•ᛝᚷᚾᛇ•ᚷᛖ•ᛚᛉᚣ•ᚫᛚᛖᛉ.ᛡᛝᛋ•ᚳᛁᚦ•ᚷᛏᚣ•ᚹᚩ•ᛝᛖ•ᛒᚪᛗᛏᚪᚷᛒ.ᛈᛡᛟ•ᚪᛉᛝᛒᛞᛉᛂᚦᚢ•ᛏᛇᛖ•ᚣᚪᚳ•ᛠᚦᚹ•ᛏᛉᚩᚳᛞᛒ•ᛟᚩᛠᚾᚠᚪ,ᛚᛗᛖᛁᚦᚫᚪᛡᛂᛁᚪᚱ•ᚦᚱᛖᛖᚣᛋᚾ•ᛖᛏᚢᚻᛈᚳᚦᛋ•ᚳᛇᛉᛖᛇᚠ•ᛞᛠᛏᛈ•ᚣᛇᛠᚢᛏ•ᛉᚦᚷᚻ•ᚫᚾᛠᚱ•ᛡᛒᛏᛁᛉ•ᚩᚢᛝ•ᛚᛒᛇᚩ•ᛟᛉ•ᚦᛞᚷᚠ•ᚩᚱᛈᚪᛏ•ᚫᛋᚪᚦ•ᛖᛟᚪᛝᚫ•ᚣᛒᛚ•ᛡᚦᚾᚠᛈᛟᛡᚾ•ᛖᚹ•ᛖᛗᚩ•ᛉᚹᚦᛠ•ᛁᚦᛒᛖᚱ•ᛟᚳᛉ•ᛈᛖ•ᛁᚢᚦ•ᛈᚠᛞᛈᛂ•ᛁᛟᚻ•ᛒᚦᛏᚩᚳᚢᛚ•ᛞᛂᛝ•ᚦᛂᛁᚪ•ᚹᚣ•ᚢᛝᚾ•ᛋᚾᛈᚠᚫᛒᛂᚫ•ᛡᛗᚹ•ᛇᚪᚩᚾᛂᚳᛚᛒᛉ•ᚣᛠᚦᚹ•ᛝᛚᛗᚳᛡᛇᚠᚫᛠᛁᚦ•ᛒᛠᛚᚦᚳᛞᛁᛇ•ᚠᚢᛉᛋᛉᛁᚦᚫᛋᛗ•ᚦᚹ.ᛈ•ᛒᛋᛏᚫᚾᚱᛁ•ᚦᛇᛡᚱᛚᛡᚹ•ᚢᚩᛋᚱ•ᚹᚫ•ᛒᚹᛡᛖᛟᛂ•ᛡᚣᛖᚩᛖᛡᚷᚫᚠᚾᚹ•ᛟᛏᚫᚠᛂᚹᛠ.ᚦᛞ•ᛁᚫᚩᚾ•ᛋᚷᛈᚪᛖᚩ•ᚣᚦᚹ•ᚾᚷ.ᛠᛋᚩᛇᛏ•ᛝᛚᚷᛞ•ᛒᛈᛈ•ᛗᛁᚪᛖ•ᛚᛏᛁ•ᚫᛂᛖ•ᛒᚾᚠᚪᛋᚷᛒᚠ•ᚫᚹᚣᚷᚢᛡᚠᛠ•ᛖᛋᛞ•ᛚᚳᛒᛞᛏᛈ•ᛖᚾᛈᚣ•ᚱᚠᚻ•ᚫᛝ•ᛟᚪᛗ•ᛒ•ᛡᛚ•ᛝᛋᚱᚢᚹᚱᚣᚻᚹ•ᚹᛡᛈ•ᛁᚻᚾᚻᚱ•ᚳᛖᛏᚫᚩᛋ•ᚣᛋ.ᛝᚫᛡᛝᚫ•ᚻᚦ•ᛇᚪᛞᛋ•ᛒᛁᚳᛈ•ᛇᛒᛟᚫ•ᛠᛝᛖ•ᛝᛠᚣ•ᛒᚣᛉᚻᚢᚠᚦᛞᚹ•ᛗᚢᛁᛡᛂᚩ•ᛋᛇᚫᛇᛝᚱ•ᛚᛇᛠ•ᛏᚩᛂ•ᚩᛝᛈ•ᚱᚻᛠᚢᛉᚦ•ᚣᚢᛋ•ᛡᛚᛖᚷᛗᛝᚹᚻᚱᛋ•ᚢᛟᚣᛠᚷᚩᚷ•ᛇᛁᛖ•ᛠᛂᛇᛁᚾᛂᚩᛗᚱᛡᛉ•ᚠᚻᚳ•ᚪᚩᚪᚫᚻᚳᛁᚦ•ᛂᚷ.ᛝᛖᚢ•ᛡᛏᛁ•ᛚᚩᚱᛈ.ᚠᚪ•ᛈᛞᚱᛒ•ᛝᛁᛋ•ᚷ•ᚠᚾᛈᚠᛒ•ᛟᚦᛁᛠᚪ•ᛡᛏᚾᚳ.ᚦᛟᚻᛈᛖᛚᚫ•ᛟᚠᛗ•ᛡᛝ.ᛒᛝᚦᛝᛠᚠ•ᛇᛗᛟ•ᚩᛠᛈ•ᛁᛡᚱ•ᚹᚹᛟᚩᛒᚩ•ᚾᚩᛂᛟᚾ•ᚦᛡᚠ•ᚩᛂᛞᚦᛏᛁ•ᛈᚾᚪᚱᛂ•ᛉᚱᚣ•ᛝᛡ•ᛏᛗ•ᛈᛞᚣᚻ•ᛗᛝᚫᚳᛇ.ᛡᚣᛂᛟ•ᛝᚩᚢᛇᛁᚱ•ᛏᚪ•ᚩᚻᚪᛚᚫᛚᚪ•ᛋᛈ•ᛏᚪᛂᚳᚦᚢᛏᚹᚦ•ᛗᚷᛖᛗᚣᛡᛁᛞ•ᚢᛋᚠᛒ•ᛟᛚᛟ•ᚪᛒ•ᚦᛚᚣ•ᚳᛠᚣ•ᛞᛇᛁ.ᚹᛉ•ᛟᛝᛒᚢᛋᛞᚻᛞ•ᚢ•ᛠᚱ•ᚫᚩᚻᛝᛒᚪᚹ•ᛈᛡᚾᛚᛇ•ᛖᛟᛝ•ᛡᚠᛇᛡ•ᚳᚦᚹ.ᛚᚦᚪᛁᛈ•ᛞᛟᛂ•ᚢᛉᚢᚾᛠᚠ•ᚩᚾᚪ•ᚱᛠᚷ•ᛗᚢ•ᛗᛁᛂᛒᛗᚱᚾᛗ•ᚩᚾᚠᚣ•ᛗᚠᛇᚠᛂ•ᛒᛡᛈᛂᛖᛡᛏ•ᛈᛟᚫᛏᛟ•ᚻᛖᚾ•ᚳᛇᚩ•ᛋᚻᚫᛇ•ᛝᛁᛟ•ᛇᚠᚢᛞᚣᚪᛚᚠᛡ•ᛖᛂ•ᚠᛚᛟ•ᛁᚳ•ᛁᛝᚷᚦ•ᛗᛋᚫᚷᚪᛠ•ᛗᛁ•ᛒᛡᛏᚾ•ᛝᛗᚦ•ᛏᚣᚫᛂ•ᛖᚻᚠᚪᛡᚷ•ᚪᛗᛁ•ᛞᛉᛏ•ᚢᛖᚦᚾ•ᛖᚪᛈᚹᛠᛚ•ᛒᚢᚱᛡᛟ•ᚪᚣ•ᛟᛇᚹᛂᛈᛞ:ᚹᚹᛈ•ᚠᛡᛚᛉᛒᚾ•ᚳᛗᚾᚱᛗ•ᚻᚦᚫᛞᛂ•ᛒᛡᚫ•ᛇᚹᛗᚢ•ᚪᛈᛡ•ᛈᛁᛂ•ᚪᚢᚾᛠᛖᛞᛗᚪ•ᛏᛟᛗ•ᛋᛞᛝᚷᛚᛋᛞᛝ•ᛟ•ᛋᛂᛞ•ᛚᛟᚠᛂᚫᚠᚪ•ᛝᛟᚣᛈ•ᚣᚩᛒᚷᚳᛖᛏᚹ•ᚪᛋᛒ•ᛗᛠᚣᛇᛗᚫᛚᚱ•ᚹᛇᛂᛒ•ᛈᛚᚠᛈ•ᚠᛗ•ᛝᚪᛇᚾᛟᚹᛇᛉ•ᚣᚫᛉᛞᛟᚱᛒ•ᛡᚱᛟ•ᚹᛏᚷᚱᛂᛖ•ᛠ•ᛈᛚᛞ•ᚻᚦᚱ•ᚦᚣᛚᛉ•ᛠᛈᚫᚠᚪ•ᚫᚪᛒ•ᛈᛋ•ᛗ•ᛏᚫᚳᛈᛝᚹᚦ•ᚻᛠ•ᛞᚩᛂᚷ•ᛋᚩᛠᚳᛖᛋ•ᚣᛖᚫ•ᛈᚦ•ᛁᛇᛈᚳᛝ.ᛈᚳᛇᚢᛏᚳᛡᛇᛝᚾᚢᚻᚦ•ᚣᚠᛗᚾ•ᛝᚠᛂᛉᛟᚱᛗ•ᛝᛠᛂᛏᚳ•ᚢᚷᚦ•ᚠᚦᛋ•ᚪᛈᚩᚪᚫᛞᛋᛝ•ᛒᛗᚩᚷ•ᚹᚠᛗᛖ•ᛠᛇᚻᚠᚻᚳᚱᚫ•ᛝᛗᛉᚳ•ᛋᚪᚹᛋᛠ•ᚩᚣᛚᛉᛝ•ᛠᛟᛉᛟᛠᛡᛝᛒ•ᛝᚳᚫᛁᚱ.ᛒᚠ•ᛏᚣᚣ•ᛠᛒ•ᚣᛚᚩ•ᛇᛉ•ᚩᚷᛗᚩ•ᚠᛚᛟᛝᚦᛠ•ᚦᚣᛖᚣ•ᚾᚷᚾ.ᛡᛏ•ᛂᛟᚾᛁ•ᛋᛟ•ᛠᚦᚣ•ᛋᛒ•ᚫᛚᚪᛂᛡᛖᚷᛉᛡᚾᛉᛏ•ᛡᛒᚻᛚᚷ•ᚢᚦᛠ•ᚢᚾᛁᚩᛗᛠᛁᚷ•ᛟᚦᚱᚣ•ᛒᛖᛠᚩᛈ•ᛗᛏᚱᚫᚢᚻᛁᛝ•ᛇᚳᚠ•ᛂᚾᚱᚷ•ᛟᚷᚻᚣᚻᛇᚫᛠᚫᚣ•ᚢᛗᛈ•ᛉᛁᚢᚾᚩᛟᚾ•ᚷᛞᚦ•ᛡᚫᚹ•ᛞᛟᛖᚱ•ᛗᚾᛖᚻᚷᛒᚢᛂ•ᚢᚦᛗᛖᛞᛝ•ᛒᚷᚣᚱ•ᛖᛁᚢᛂ•ᚣᛡᛚᚢ•ᛂᛟ.'ᛠᛉᚣᛇᚱ•ᚩᛈᛋᚳᚫᛗᛇ•ᚾᛂ•ᛖᚠᛋ•ᛖᚠᚪᛝ•ᚢᛝᛂᛇᚷᚠᛝᚱᛁᚦ•ᛂᚢᚫ•ᚣᛋᚠᛖᚢᛋᚫᚣᛠ•ᛁᛏᛟᚱᛏᛟᚩ•ᚷᚾᚻ•ᛞᛗᚩᚳᛞᛖᛏ•ᚹᛉᛞᛚ•ᚩᚫᛂ•ᛇᚢᛒ'•ᛗᛏ•ᛞᛗᛖ.ᛏᛈᚹᛇᛋ•ᚹᛒᛇᚦ•ᚾᚻᚷᛂ•ᚱᛡᛞᛡᚦᚪᛁᛇᚫᛉᛚ•ᛇᛠ•ᛡᚪᛂ•ᚻᚱ•ᚦᛈᛞᛂᛝᚩ•ᚷᚠᛇᛗᚳ•ᚻᛞᚩᛏᚳ•ᚢᚱ•ᛈᚾ:ᚪ•ᛗᛝᛞᛡᚦᛉᛁᛗ:ᛡᛞᛈᛝᚢᚹᚪᛗ•ᛏᚪᛝ•ᛝᚦᛡᚹᛋᚻ•ᛁᚳ•ᚫᛈᚫᚷᚩ•ᛗᛁᚪ•ᛖᚩ•ᛏᚹᚩ•ᚠᚣᚢᛏᛂ•ᚦᛂᛠᛖᚳᚾᛠ•ᚳᛠᛖ•ᚱᚩᚢᛉ•ᛞᚹᚻᛒᛝᚠᚪᚳᛂᚢ•ᚩᛂᛡᛠᛁᛚᚷᚻ•ᛒᚢᛂ•ᛉᚪᚳᚹᛡ•ᛗᚩᛈᚣᛞᛡᛚᛈ•ᛇᛁᚦᚱ•ᚣᚷᛗ•ᛉᛟᚷᛋ•ᛗᛈᛂᛟᛞ•ᛟᛏᛡᛟ•ᛏᛝᛁ•ᛗᛝᚣᚪᚫ•ᛝ•ᚱᚣᛂ•ᚾᛚᚢᛉᛒ•ᚻᛈᛂᚩᛠ•ᚷᚫᚹ•ᛉᛋᛞᚳ•ᚢᛏ•ᛟᚻᛇᚾᛈᛏ•ᛠᚣᛒᚢᚷ•ᚷᚪᛇ•ᚾᚷᚩᛖᛚᛗᛒᚦ•ᚣᛡᛟᛇᚣ•ᛗᚳᛟᚦ•ᛖᛚᚱᛇᛈᚱᛞᚣ•ᛉᛞ•ᛝᚣᛈ•ᛋᛖᛉᚹ•ᚳᚷᚠᛞᚱᛖ•ᛞᛖᚹᚩᛇᛟ•ᚻᚩᛟ•ᛒᛋ•ᚻᛠᚪᚳᛁᛗᛉᛂᛗᛖ•ᛗᛚ•ᚷᚩᛏᚦᛉᛖᛠᚱᚷᚣᛝ•ᚫᛗᛁᚹ•ᛋᛒ•ᛉᛗ•ᛋᛇᚷᛞᚦᚫ•ᚠᛡᚪᛒᚳᚢ•ᚹᚱ•ᛒᛠᚠᛉᛁᛗᚢᚳᛈᚻᛝᛚᛇ•ᛗᛋᛞᛡᛈᚠ•ᛒᚻᛇᚳ•ᛇᛖ•ᛠᛖᛁᚷᛉᚷᛋ•ᛖᛋᛇᚦᚦᛖᛋ•ᚦᛟ•ᚳᛠᛁᛗᚳᛉ•ᛞᛂᚢ•ᛒᛖᛁ:ᚫᛂ•ᛟᛋᚱ:ᛗᚣᛚᚩᚻ•ᚩᚫ•ᚳᚦᚷᚹ•ᚹᛚᚫ,ᛉᚩᚪᛈ•ᛗᛞᛞᚢᚷᚹ•ᛚ•ᛞᚾᚣᛂ•ᚳᚠᛡ•ᚫᛏᛈᛇᚪᚦ•ᚳᚫ:ᚳᛞ•ᚠᚾ•ᛡᛖ•ᚠᚾᚳᛝ•ᚱᚠ•ᚫᛁᚱᛞᛖ•ᛋᚣᛂᛠᚢᛝᚹ•ᛉᚩ•ᛗᛠᚹᚠ•ᚱᚷᛡ•ᛝᚱᛒ•ᚫᚾᚢᛋ:ᛈᚪᚱᚪᛒᛚᛖ:ᛚᛁᚳᛖ•ᚦᛖ•ᛁᚾᛋᛏᚪᚱ•ᛏᚢᚾᚾᛖᛚᛝ•ᛏᚩ•ᚦᛖ•ᛋᚢᚱᚠᚪᚳᛖ.ᚹᛖ•ᛗᚢᛋᛏ•ᛋᚻᛖᛞ•ᚩᚢᚱ•ᚩᚹᚾ•ᚳᛁᚱᚳᚢᛗᚠᛖᚱᛖᚾᚳᛖᛋ.ᚠᛁᚾᛞ•ᚦᛖ•ᛞᛁᚢᛁᚾᛁᛏᚣ•ᚹᛁᚦᛁᚾ•ᚪᚾᛞ•ᛖᛗᛖᚱᚷᛖ::"


Page53Red = "ᛏᛈᚹᛇᛋ•ᚹᛒᛇᚦ•ᚾᚻᚷᛂ•ᚱᛡᛞᛡᚦᚪᛁᛇᚫᛉᛚ•ᛇᛠ•ᛡᚪᛂ•ᚻᚱ•ᚦᛈᛞᛂᛝᚩ•ᚷᚠᛇᛗᚳ•ᚻᛞᚩᛏᚳ•ᚢᚱ•ᛈᚾ"


OneirasCode = "ᛞ•ᛒᛒᛒᛒᛗᛡᛝᚣ"
OneirasCode = "ᚩᚻᚪᛏᚾᛂ•ᚣᛝᛏᛡᛝ•ᚢ•ᚩᚠᚣ•ᛗᚢᛒ•ᛏᚠᛈ."
OneirasCode = "ᚦᛂᛠᛖᚳᚾᛠ"

pagelist = [Page0, Page1, Page2, Page3, Page4, Page5, Page6, Page7, Page8, Page9, Page10, Page11, Page12, Page13, Page14, Page15, Page16, Page17, Page18, Page19, Page20, Page21, Page22, Page23, Page24, Page25, Page26, Page27, Page28, Page29, Page30, Page31, Page32, Page33, Page34, Page35, Page36, Page37, Page38, Page39, Page40, Page41, Page42, Page43, Page44, Page45, Page46, Page47, Page48, Page49, Page50, Page51, Page52, Page53, Page54, Page55, Page56, Page57, Pages27to32, Page54to55, allpages,  Page40to53, Page53Red, OneirasCode]



AssignedPage = ""
VigstreamPage = ""

RevGem = True

stream = [0,0,0,0,0,0,0,0,0,0,0]
primestream = [ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 1, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433]
#Added a 0 for the F skip (57th term)
defaultstream = [0,0,0]
fibonaccistream = [0, 1, 1, 2, 3, 5, 8, 13, 21, 5, 26, 2, 28]

streamarray = [defaultstream, defaultstream , primestream, fibonaccistream]


def vigstream():
        tline1 = ""
        Rline = ""
        gemline = ""
        freqcount = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
        wordcount = 0
        gemwordcount = 0
        gemwordlist = ""
        gemwordfactors = ""
        gemfactorarray = []
        conter = 0
        fconter = 0
        reverseline = [0] * len(stream)
        for x in range(0,len(stream)):
                reverseline[len(stream) - x - 1] = stream[x]



        
        for x in range(0, len(AssignedPage)):
                for item in runelist:
                        if AssignedPage[x] == SPACE.Icon or AssignedPage[x] == ":" or AssignedPage[x] == "." or AssignedPage[x] == "'":
                                tline1 = tline1 + "|" + SPACE.English
                                Rline = Rline + "|" + SPACE.English                                
                                gemline = gemline + "|" + SPACE.English
                                wordcount = wordcount + 1
                                gemwordlist = gemwordlist + "|" + str(gemwordcount)
                                gemwordfactors = gemwordfactors + "|" + str(calcfactors(gemwordcount))
                                gemfactorarray.append(calcfactors(gemwordcount))
                                gemwordcount = 0

                                break
                            
                        elif AssignedPage[x] == item.Icon:
                                tline1 = tline1 + "|" + runelist[(item.Shift - (stream[conter % (len(stream))])) % 29].English
                                Rline = Rline + "|" + runelist[28 - ((item.Shift - (stream[conter % (len(stream))])) % 29)].English
                                gemline = gemline + "|" + str(runelist[(item.Shift - (stream[conter % (len(stream))])) % 29].Gematria)
                                freqcount[runelist[((item.Shift - (stream[conter % (len(stream))])) % 29)].Shift] += 1
                                gemwordcount = gemwordcount + runelist[(item.Shift - (stream[conter % (len(stream))])) % 29].Gematria
                                conter = conter + 1

                                if item.English == "F":
                                        fconter = fconter + 1
#                                        tline1 = tline1 +  "|" + '\033'#[0m'
                                break
                        
#        wordcount = wordcount + 1
#        gemwordlist = gemwordlist + "|" + str(gemwordcount)

                                
        print ("\nRUNES:\n" + tline1 + "\n\n")
        if RevGem:
                print ("\nREVERSED RUNES:\n" + Rline + "\n\n")
        print ("GEMATRIA:\n" + gemline + "\n\n")
#        print ("GEMATRIA WORD SUMS:\n" + gemwordlist + "\n\n")
        freqlist = ""
        for z in range(0, 29):
                freqlist = freqlist + runelist[z].English + ": " + str("{0:.1f}".format(float(freqcount[z]/conter) * 100)) + "%|"

        print ("GEMATRIA FACTORS:\n" + gemwordfactors + "\n\n")                
        print ("FREQUENCIES:\n" + freqlist + "\n\n")
        
        print ("Letter Count:\n" + str(conter) + "\n\n")
        print ("Word Count:\n" + str(wordcount) + "\n\n")

        
        gemfactorset = []
        gemfactorset = [gemfactorset.append(x) for x in gemfactorarray if x not in gemfactorset]

        penis = input("Done: " + str(fconter) + " Fs given")
        
        return 0



def dualcipher(direction, letter, space, ninedots, fourdots, customset):
        dualeng = []
        dualrune = []
        tline = ""
        conter = 0
        freqcount = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

        for x in range(0,29):
                dualrune.append(runelist[x].Icon)
        if not customset:
                for x in range(0,29):
                        dualeng.append(runelist[x].English)
        else:
                for x in range(0,29):
                        dualeng.append(customset[x].English)
                
        print(len(dualeng))
        for x in range(0, len(AssignedPage)):
                for y in range(0,29):
                        if dualrune[y] == AssignedPage[x]:
                                tline += dualeng[y]
                                freqcount[y] += 1 # does not account for custom set
                                conter += 1
                                shiftcount = 0
                                if direction == True:
                                        while shiftcount != letter:
                                                dualrune.insert(0,dualrune[28])
                                                dualrune.pop()
                                                shiftcount += 1
                                elif direction == False:
                                        while shiftcount != letter:
                                                dualrune.append(dualrune[0])
                                                dualrune.remove(dualrune[0])
                                                shiftcount += 1



                                
                                break
                        elif AssignedPage[x] == SPACE.Icon or AssignedPage[x] == "." or AssignedPage[x] == "'":
                                tline += " "
                                shiftcount = 0
                                if direction == True:
                                        while shiftcount != space:
                                                dualrune.insert(0,dualrune[28])
                                                dualrune.pop()
                                                shiftcount += 1
                                elif direction == False:
                                        while shiftcount != space:
                                                dualrune.append(dualrune[0])
                                                dualrune.remove(dualrune[0])
                                                shiftcount += 1
                                break
                        elif AssignedPage[x] == ":":
                                tline += " "
                                shiftcount = 0
                                if direction == True:
                                        while shiftcount != ninedot:
                                                dualrune.insert(0,dualrune[28])
                                                dualrune.pop()
                                                shiftcount += 1
                                elif direction == False:
                                        while shiftcount != ninedot:
                                                dualrune.append(dualrune[0])
                                                dualrune.remove(dualrune[0])
                                                shiftcount += 1
                                break

        print(tline + "\n\n")
        freqlist = ""
        for z in range(0, 29):
                freqlist = freqlist + runelist[z].English + ": " + str("{0:.1f}".format(float(freqcount[z]/conter) * 100)) + "%|"
                
        print ("FREQUENCIES:\n" + freqlist + "\n\n")




def theorysel():
        theorymode = input("Some theories suggest you do the following to the runes beforehand:\n1: Reverse runes\n2: Reverse stream\n3: Skip first letter\n4: Totient of streams (-1 for primes)\n5: Remove reversed gematria output\n9: DONE\n\n")



        if theorymode == "1":
            print("Runes Reversed:")
            reverseline = ""
            global AssignedPage
            global RevGem
            for x in AssignedPage:
                reverseline =x + reverseline
            AssignedPage = reverseline
            print(AssignedPage +"\n")
            
            theorysel()
        if theorymode == "2":
            print("Stream/Shift Reversed (TBI)")
            revline = ""
            global ShiftSource
            for x in ShiftSource:
                revline = x + revline
            ShiftSource = revline
            theorysel()
        if theorymode == "3":
            stream.insert(0, 0)
            print(stream)
            theorysel()            
        if theorymode == "4":
            for x in range(0, len(stream)):
                stream[x] = stream[x] - 1
            theorysel()
        if theorymode == "5":
            RevGem = not RevGem
            theorysel()


def customrunes():
        runeholder = ""
        streamtype = input("Enter each letter of your passphrase followed by a space: \nF, U, TH, O, R, CK, G, W, H, N, I, J, EO, P, X, S, T, B, E, M, L, NG, OE, D, A, AE, Y, IA, EA\n")
        for item in streamtype:

                
                if item != " ":
                        runeholder += item                
                if item == " " or item == streamtype[-1]:
                        for x in range(0, 28):
                                if runelist[x].English == runeholder:
                                        customrunelist.append(runelist[x])
                                        runeholder = ""
                                        break


        for item in runelist:
                for item2 in customrunelist:
                        if item == item2:
                                break
                        elif item2 == customrunelist[-1]:
                                customrunelist.append(item)
                                break
                        
                        
        for item in customrunelist:
                print (item.English)
        return customrunelist


def calcfactors(n):
	i = 2
	factors = []
	while i * i <= n:
		if n % i:
			i += 1
		else:
			n //= i
			factors.append(i)
	if n > 1:
		factors.append(n)
	print(factors)
	return factors



                                 

curtext = []

textsel = input("Pages [0-57]\nPage 27 to 32 [58]\nPage 54 to 55 [59]\nAll Pages [60]\nSelect page to be decrypted:\n")
filename = ("p" + str(textsel))
print ("\n" + "Page " + str(textsel))


AssignedPage = pagelist[int(textsel)]

print("\n" + AssignedPage + "\n")


decryptmode = input("Select decypher mode: \n1: Vig and Stream Cipher\n2: Alberti Cipher\n3: Skip and Stream Cipher\n")
print (decryptmode)


if decryptmode == "1":
        streamtype = input("Select stream type: \n1: Default\n2: Primes\n3: Fibonacci\n")
        if not streamtype:
                stream = streamarray[0]
        else:
                stream = streamarray[int(streamtype)]
        theorysel()
        vigstream()


if decryptmode == "2":
        streamtype = input("What direction would you like the cipher to rotate?: \n1: Clockwise\n2: Anti-Clockwise\n")
        if not streamtype:
                direction = True
        elif streamtype == "2":
                direction = False
        else:
                direction = True

        streamtype = input("By how much should a letter shift the cipher?: \n")
        if not streamtype:
                letter = 1
        else:
                letter = int(streamtype)      
        streamtype = input("By how much should a space shift the cipher?: \n")
        if not streamtype:
                space = 1
        else:
                space = int(streamtype)  
        streamtype = input("By how much should a ':' shift the cipher?: \n")
        if not streamtype:
                ninedot = 1
        else:
                ninedot = int(streamtype)
        streamtype = input("Would you like to use a custom alphabet ordering?: \n1: No\n2: Yes\n")
        customset = []
        if streamtype == "2":
                customset = customrunes()
                print (len(customset))

                
        theorysel()
        dualcipher(direction, letter , space , ninedot , 0, customset)

if decryptmode == "3":
        runeholder = ""
        wordarray = []
        streamtype = input("Finding Pairs: \n\n")
        for x in AssignedPage:
                if x == " " or x == ":" or x == "'" or x == SPACE.Icon or x == "." :
                        wordarray.append(runeholder)
                        runeholder = ""
                else:
                        runeholder += x
        for y in wordarray:
                for z in wordarray:
                        if str(y) == str(z) and wordarray.index(y) != wordarray.index(z):
                                print("FOUND PAIR: " + z + " INDEX: " + str(wordarray.index(z)) + " : " + str(wordarray.index(y)))
                                break

        print(str(len(wordarray)))


if decryptmode == "4":
        runeholder = ""
        wordarray = []
        streamtype = input("Pick number: \n\n")
        calcfactors(int(streamtype))

else:
        print ("k thx")

    